{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Canvas = void 0;\nconst CanvasUtils_1 = require(\"../Utils/CanvasUtils\");\nconst ColorUtils_1 = require(\"../Utils/ColorUtils\");\nconst Constants_1 = require(\"./Utils/Constants\");\nconst Utils_1 = require(\"../Utils/Utils\");\nclass Canvas {\n  constructor(container) {\n    this.container = container;\n    this.size = {\n      height: 0,\n      width: 0\n    };\n    this.context = null;\n    this.generatedCanvas = false;\n  }\n  init() {\n    this.resize();\n    this.initStyle();\n    this.initCover();\n    this.initTrail();\n    this.initBackground();\n    this.paint();\n  }\n  loadCanvas(canvas) {\n    var _a;\n    if (this.generatedCanvas) {\n      (_a = this.element) === null || _a === void 0 ? void 0 : _a.remove();\n    }\n    this.generatedCanvas = canvas.dataset && Constants_1.Constants.generatedAttribute in canvas.dataset ? canvas.dataset[Constants_1.Constants.generatedAttribute] === \"true\" : this.generatedCanvas;\n    this.element = canvas;\n    this.originalStyle = (0, Utils_1.deepExtend)({}, this.element.style);\n    this.size.height = canvas.offsetHeight;\n    this.size.width = canvas.offsetWidth;\n    this.context = this.element.getContext(\"2d\");\n    this.container.retina.init();\n    this.initBackground();\n  }\n  destroy() {\n    var _a;\n    if (this.generatedCanvas) {\n      (_a = this.element) === null || _a === void 0 ? void 0 : _a.remove();\n    }\n    this.draw(ctx => {\n      (0, CanvasUtils_1.clear)(ctx, this.size);\n    });\n  }\n  paint() {\n    const options = this.container.actualOptions;\n    this.draw(ctx => {\n      if (options.backgroundMask.enable && options.backgroundMask.cover) {\n        (0, CanvasUtils_1.clear)(ctx, this.size);\n        this.paintBase(this.coverColorStyle);\n      } else {\n        this.paintBase();\n      }\n    });\n  }\n  clear() {\n    const options = this.container.actualOptions,\n      trail = options.particles.move.trail;\n    if (options.backgroundMask.enable) {\n      this.paint();\n    } else if (trail.enable && trail.length > 0 && this.trailFillColor) {\n      this.paintBase((0, ColorUtils_1.getStyleFromRgb)(this.trailFillColor, 1 / trail.length));\n    } else {\n      this.draw(ctx => {\n        (0, CanvasUtils_1.clear)(ctx, this.size);\n      });\n    }\n  }\n  async windowResize() {\n    if (!this.element) {\n      return;\n    }\n    this.resize();\n    const container = this.container,\n      needsRefresh = container.updateActualOptions();\n    container.particles.setDensity();\n    for (const [, plugin] of container.plugins) {\n      if (plugin.resize !== undefined) {\n        plugin.resize();\n      }\n    }\n    if (needsRefresh) {\n      await container.refresh();\n    }\n  }\n  resize() {\n    if (!this.element) {\n      return;\n    }\n    const container = this.container,\n      pxRatio = container.retina.pixelRatio,\n      size = container.canvas.size,\n      newSize = {\n        width: this.element.offsetWidth * pxRatio,\n        height: this.element.offsetHeight * pxRatio\n      };\n    if (newSize.height === size.height && newSize.width === size.width && newSize.height === this.element.height && newSize.width === this.element.width) {\n      return;\n    }\n    const oldSize = Object.assign({}, size);\n    this.element.width = size.width = this.element.offsetWidth * pxRatio;\n    this.element.height = size.height = this.element.offsetHeight * pxRatio;\n    if (this.container.started) {\n      this.resizeFactor = {\n        width: size.width / oldSize.width,\n        height: size.height / oldSize.height\n      };\n    }\n  }\n  drawConnectLine(p1, p2) {\n    this.draw(ctx => {\n      var _a;\n      const lineStyle = this.lineStyle(p1, p2);\n      if (!lineStyle) {\n        return;\n      }\n      const pos1 = p1.getPosition(),\n        pos2 = p2.getPosition();\n      (0, CanvasUtils_1.drawConnectLine)(ctx, (_a = p1.retina.linksWidth) !== null && _a !== void 0 ? _a : this.container.retina.linksWidth, lineStyle, pos1, pos2);\n    });\n  }\n  drawGrabLine(particle, lineColor, opacity, mousePos) {\n    const container = this.container;\n    this.draw(ctx => {\n      var _a;\n      const beginPos = particle.getPosition();\n      (0, CanvasUtils_1.drawGrabLine)(ctx, (_a = particle.retina.linksWidth) !== null && _a !== void 0 ? _a : container.retina.linksWidth, beginPos, mousePos, lineColor, opacity);\n    });\n  }\n  drawParticle(particle, delta) {\n    var _a, _b, _c, _d, _e, _f;\n    if (particle.spawning || particle.destroyed) {\n      return;\n    }\n    const radius = particle.getRadius();\n    if (radius <= 0) {\n      return;\n    }\n    const pfColor = particle.getFillColor(),\n      psColor = (_a = particle.getStrokeColor()) !== null && _a !== void 0 ? _a : pfColor;\n    if (!pfColor && !psColor) {\n      return;\n    }\n    let [fColor, sColor] = this.getPluginParticleColors(particle);\n    if (!fColor || !sColor) {\n      if (!fColor) {\n        fColor = pfColor ? pfColor : undefined;\n      }\n      if (!sColor) {\n        sColor = psColor ? psColor : undefined;\n      }\n    }\n    const options = this.container.actualOptions,\n      zIndexOptions = particle.options.zIndex,\n      zOpacityFactor = (1 - particle.zIndexFactor) ** zIndexOptions.opacityRate,\n      opacity = (_d = (_b = particle.bubble.opacity) !== null && _b !== void 0 ? _b : (_c = particle.opacity) === null || _c === void 0 ? void 0 : _c.value) !== null && _d !== void 0 ? _d : 1,\n      strokeOpacity = (_f = (_e = particle.stroke) === null || _e === void 0 ? void 0 : _e.opacity) !== null && _f !== void 0 ? _f : opacity,\n      zOpacity = opacity * zOpacityFactor,\n      zStrokeOpacity = strokeOpacity * zOpacityFactor;\n    const colorStyles = {\n      fill: fColor ? (0, ColorUtils_1.getStyleFromHsl)(fColor, zOpacity) : undefined\n    };\n    colorStyles.stroke = sColor ? (0, ColorUtils_1.getStyleFromHsl)(sColor, zStrokeOpacity) : colorStyles.fill;\n    this.draw(ctx => {\n      const zSizeFactor = (1 - particle.zIndexFactor) ** zIndexOptions.sizeRate,\n        container = this.container;\n      for (const updater of container.particles.updaters) {\n        if (updater.beforeDraw) {\n          updater.beforeDraw(particle);\n        }\n        if (updater.getColorStyles) {\n          const {\n            fill,\n            stroke\n          } = updater.getColorStyles(particle, ctx, radius, zOpacity);\n          if (fill) {\n            colorStyles.fill = fill;\n          }\n          if (stroke) {\n            colorStyles.stroke = stroke;\n          }\n        }\n      }\n      (0, CanvasUtils_1.drawParticle)(container, ctx, particle, delta, colorStyles, options.backgroundMask.enable, options.backgroundMask.composite, radius * zSizeFactor, zOpacity, particle.options.shadow);\n      for (const updater of container.particles.updaters) {\n        if (updater.afterDraw) {\n          updater.afterDraw(particle);\n        }\n      }\n    });\n  }\n  drawPlugin(plugin, delta) {\n    this.draw(ctx => {\n      (0, CanvasUtils_1.drawPlugin)(ctx, plugin, delta);\n    });\n  }\n  drawParticlePlugin(plugin, particle, delta) {\n    this.draw(ctx => {\n      (0, CanvasUtils_1.drawParticlePlugin)(ctx, plugin, particle, delta);\n    });\n  }\n  initBackground() {\n    const options = this.container.actualOptions,\n      background = options.background,\n      element = this.element,\n      elementStyle = element === null || element === void 0 ? void 0 : element.style;\n    if (!elementStyle) {\n      return;\n    }\n    if (background.color) {\n      const color = (0, ColorUtils_1.colorToRgb)(background.color);\n      elementStyle.backgroundColor = color ? (0, ColorUtils_1.getStyleFromRgb)(color, background.opacity) : \"\";\n    } else {\n      elementStyle.backgroundColor = \"\";\n    }\n    elementStyle.backgroundImage = background.image || \"\";\n    elementStyle.backgroundPosition = background.position || \"\";\n    elementStyle.backgroundRepeat = background.repeat || \"\";\n    elementStyle.backgroundSize = background.size || \"\";\n  }\n  draw(cb) {\n    if (!this.context) {\n      return;\n    }\n    return cb(this.context);\n  }\n  initCover() {\n    const options = this.container.actualOptions,\n      cover = options.backgroundMask.cover,\n      color = cover.color,\n      coverRgb = (0, ColorUtils_1.colorToRgb)(color);\n    if (coverRgb) {\n      const coverColor = {\n        r: coverRgb.r,\n        g: coverRgb.g,\n        b: coverRgb.b,\n        a: cover.opacity\n      };\n      this.coverColorStyle = (0, ColorUtils_1.getStyleFromRgb)(coverColor, coverColor.a);\n    }\n  }\n  initTrail() {\n    const options = this.container.actualOptions,\n      trail = options.particles.move.trail,\n      fillColor = (0, ColorUtils_1.colorToRgb)(trail.fillColor);\n    if (fillColor) {\n      const trail = options.particles.move.trail;\n      this.trailFillColor = {\n        r: fillColor.r,\n        g: fillColor.g,\n        b: fillColor.b,\n        a: 1 / trail.length\n      };\n    }\n  }\n  getPluginParticleColors(particle) {\n    let fColor, sColor;\n    for (const [, plugin] of this.container.plugins) {\n      if (!fColor && plugin.particleFillColor) {\n        fColor = (0, ColorUtils_1.colorToHsl)(plugin.particleFillColor(particle));\n      }\n      if (!sColor && plugin.particleStrokeColor) {\n        sColor = (0, ColorUtils_1.colorToHsl)(plugin.particleStrokeColor(particle));\n      }\n      if (fColor && sColor) {\n        break;\n      }\n    }\n    return [fColor, sColor];\n  }\n  initStyle() {\n    const element = this.element,\n      options = this.container.actualOptions;\n    if (!element) {\n      return;\n    }\n    const originalStyle = this.originalStyle;\n    if (options.fullScreen.enable) {\n      this.originalStyle = (0, Utils_1.deepExtend)({}, element.style);\n      element.style.setProperty(\"position\", \"fixed\", \"important\");\n      element.style.setProperty(\"z-index\", options.fullScreen.zIndex.toString(10), \"important\");\n      element.style.setProperty(\"top\", \"0\", \"important\");\n      element.style.setProperty(\"left\", \"0\", \"important\");\n      element.style.setProperty(\"width\", \"100%\", \"important\");\n      element.style.setProperty(\"height\", \"100%\", \"important\");\n    } else if (originalStyle) {\n      element.style.position = originalStyle.position;\n      element.style.zIndex = originalStyle.zIndex;\n      element.style.top = originalStyle.top;\n      element.style.left = originalStyle.left;\n      element.style.width = originalStyle.width;\n      element.style.height = originalStyle.height;\n    }\n    for (const key in options.style) {\n      if (!key || !options.style) {\n        continue;\n      }\n      const value = options.style[key];\n      if (!value) {\n        continue;\n      }\n      element.style.setProperty(key, value, \"important\");\n    }\n  }\n  paintBase(baseColor) {\n    this.draw(ctx => {\n      (0, CanvasUtils_1.paintBase)(ctx, this.size, baseColor);\n    });\n  }\n  lineStyle(p1, p2) {\n    return this.draw(ctx => {\n      const options = this.container.actualOptions,\n        connectOptions = options.interactivity.modes.connect;\n      return (0, CanvasUtils_1.gradient)(ctx, p1, p2, connectOptions.links.opacity);\n    });\n  }\n}\nexports.Canvas = Canvas;","map":{"version":3,"names":["Object","defineProperty","exports","value","Canvas","CanvasUtils_1","require","ColorUtils_1","Constants_1","Utils_1","constructor","container","size","height","width","context","generatedCanvas","init","resize","initStyle","initCover","initTrail","initBackground","paint","loadCanvas","canvas","_a","element","remove","dataset","Constants","generatedAttribute","originalStyle","deepExtend","style","offsetHeight","offsetWidth","getContext","retina","destroy","draw","ctx","clear","options","actualOptions","backgroundMask","enable","cover","paintBase","coverColorStyle","trail","particles","move","length","trailFillColor","getStyleFromRgb","windowResize","needsRefresh","updateActualOptions","setDensity","plugin","plugins","undefined","refresh","pxRatio","pixelRatio","newSize","oldSize","assign","started","resizeFactor","drawConnectLine","p1","p2","lineStyle","pos1","getPosition","pos2","linksWidth","drawGrabLine","particle","lineColor","opacity","mousePos","beginPos","drawParticle","delta","_b","_c","_d","_e","_f","spawning","destroyed","radius","getRadius","pfColor","getFillColor","psColor","getStrokeColor","fColor","sColor","getPluginParticleColors","zIndexOptions","zIndex","zOpacityFactor","zIndexFactor","opacityRate","bubble","strokeOpacity","stroke","zOpacity","zStrokeOpacity","colorStyles","fill","getStyleFromHsl","zSizeFactor","sizeRate","updater","updaters","beforeDraw","getColorStyles","composite","shadow","afterDraw","drawPlugin","drawParticlePlugin","background","elementStyle","color","colorToRgb","backgroundColor","backgroundImage","image","backgroundPosition","position","backgroundRepeat","repeat","backgroundSize","cb","coverRgb","coverColor","r","g","b","a","fillColor","particleFillColor","colorToHsl","particleStrokeColor","fullScreen","setProperty","toString","top","left","key","baseColor","connectOptions","interactivity","modes","connect","gradient","links"],"sources":["D:/Sergio/Portfolio DeadLine(09 Oct)/portfoliofront/node_modules/tsparticles/cjs/Core/Canvas.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Canvas = void 0;\nconst CanvasUtils_1 = require(\"../Utils/CanvasUtils\");\nconst ColorUtils_1 = require(\"../Utils/ColorUtils\");\nconst Constants_1 = require(\"./Utils/Constants\");\nconst Utils_1 = require(\"../Utils/Utils\");\nclass Canvas {\n    constructor(container) {\n        this.container = container;\n        this.size = {\n            height: 0,\n            width: 0,\n        };\n        this.context = null;\n        this.generatedCanvas = false;\n    }\n    init() {\n        this.resize();\n        this.initStyle();\n        this.initCover();\n        this.initTrail();\n        this.initBackground();\n        this.paint();\n    }\n    loadCanvas(canvas) {\n        var _a;\n        if (this.generatedCanvas) {\n            (_a = this.element) === null || _a === void 0 ? void 0 : _a.remove();\n        }\n        this.generatedCanvas =\n            canvas.dataset && Constants_1.Constants.generatedAttribute in canvas.dataset\n                ? canvas.dataset[Constants_1.Constants.generatedAttribute] === \"true\"\n                : this.generatedCanvas;\n        this.element = canvas;\n        this.originalStyle = (0, Utils_1.deepExtend)({}, this.element.style);\n        this.size.height = canvas.offsetHeight;\n        this.size.width = canvas.offsetWidth;\n        this.context = this.element.getContext(\"2d\");\n        this.container.retina.init();\n        this.initBackground();\n    }\n    destroy() {\n        var _a;\n        if (this.generatedCanvas) {\n            (_a = this.element) === null || _a === void 0 ? void 0 : _a.remove();\n        }\n        this.draw((ctx) => {\n            (0, CanvasUtils_1.clear)(ctx, this.size);\n        });\n    }\n    paint() {\n        const options = this.container.actualOptions;\n        this.draw((ctx) => {\n            if (options.backgroundMask.enable && options.backgroundMask.cover) {\n                (0, CanvasUtils_1.clear)(ctx, this.size);\n                this.paintBase(this.coverColorStyle);\n            }\n            else {\n                this.paintBase();\n            }\n        });\n    }\n    clear() {\n        const options = this.container.actualOptions, trail = options.particles.move.trail;\n        if (options.backgroundMask.enable) {\n            this.paint();\n        }\n        else if (trail.enable && trail.length > 0 && this.trailFillColor) {\n            this.paintBase((0, ColorUtils_1.getStyleFromRgb)(this.trailFillColor, 1 / trail.length));\n        }\n        else {\n            this.draw((ctx) => {\n                (0, CanvasUtils_1.clear)(ctx, this.size);\n            });\n        }\n    }\n    async windowResize() {\n        if (!this.element) {\n            return;\n        }\n        this.resize();\n        const container = this.container, needsRefresh = container.updateActualOptions();\n        container.particles.setDensity();\n        for (const [, plugin] of container.plugins) {\n            if (plugin.resize !== undefined) {\n                plugin.resize();\n            }\n        }\n        if (needsRefresh) {\n            await container.refresh();\n        }\n    }\n    resize() {\n        if (!this.element) {\n            return;\n        }\n        const container = this.container, pxRatio = container.retina.pixelRatio, size = container.canvas.size, newSize = {\n            width: this.element.offsetWidth * pxRatio,\n            height: this.element.offsetHeight * pxRatio,\n        };\n        if (newSize.height === size.height &&\n            newSize.width === size.width &&\n            newSize.height === this.element.height &&\n            newSize.width === this.element.width) {\n            return;\n        }\n        const oldSize = Object.assign({}, size);\n        this.element.width = size.width = this.element.offsetWidth * pxRatio;\n        this.element.height = size.height = this.element.offsetHeight * pxRatio;\n        if (this.container.started) {\n            this.resizeFactor = {\n                width: size.width / oldSize.width,\n                height: size.height / oldSize.height,\n            };\n        }\n    }\n    drawConnectLine(p1, p2) {\n        this.draw((ctx) => {\n            var _a;\n            const lineStyle = this.lineStyle(p1, p2);\n            if (!lineStyle) {\n                return;\n            }\n            const pos1 = p1.getPosition(), pos2 = p2.getPosition();\n            (0, CanvasUtils_1.drawConnectLine)(ctx, (_a = p1.retina.linksWidth) !== null && _a !== void 0 ? _a : this.container.retina.linksWidth, lineStyle, pos1, pos2);\n        });\n    }\n    drawGrabLine(particle, lineColor, opacity, mousePos) {\n        const container = this.container;\n        this.draw((ctx) => {\n            var _a;\n            const beginPos = particle.getPosition();\n            (0, CanvasUtils_1.drawGrabLine)(ctx, (_a = particle.retina.linksWidth) !== null && _a !== void 0 ? _a : container.retina.linksWidth, beginPos, mousePos, lineColor, opacity);\n        });\n    }\n    drawParticle(particle, delta) {\n        var _a, _b, _c, _d, _e, _f;\n        if (particle.spawning || particle.destroyed) {\n            return;\n        }\n        const radius = particle.getRadius();\n        if (radius <= 0) {\n            return;\n        }\n        const pfColor = particle.getFillColor(), psColor = (_a = particle.getStrokeColor()) !== null && _a !== void 0 ? _a : pfColor;\n        if (!pfColor && !psColor) {\n            return;\n        }\n        let [fColor, sColor] = this.getPluginParticleColors(particle);\n        if (!fColor || !sColor) {\n            if (!fColor) {\n                fColor = pfColor ? pfColor : undefined;\n            }\n            if (!sColor) {\n                sColor = psColor ? psColor : undefined;\n            }\n        }\n        const options = this.container.actualOptions, zIndexOptions = particle.options.zIndex, zOpacityFactor = (1 - particle.zIndexFactor) ** zIndexOptions.opacityRate, opacity = (_d = (_b = particle.bubble.opacity) !== null && _b !== void 0 ? _b : (_c = particle.opacity) === null || _c === void 0 ? void 0 : _c.value) !== null && _d !== void 0 ? _d : 1, strokeOpacity = (_f = (_e = particle.stroke) === null || _e === void 0 ? void 0 : _e.opacity) !== null && _f !== void 0 ? _f : opacity, zOpacity = opacity * zOpacityFactor, zStrokeOpacity = strokeOpacity * zOpacityFactor;\n        const colorStyles = {\n            fill: fColor ? (0, ColorUtils_1.getStyleFromHsl)(fColor, zOpacity) : undefined,\n        };\n        colorStyles.stroke = sColor ? (0, ColorUtils_1.getStyleFromHsl)(sColor, zStrokeOpacity) : colorStyles.fill;\n        this.draw((ctx) => {\n            const zSizeFactor = (1 - particle.zIndexFactor) ** zIndexOptions.sizeRate, container = this.container;\n            for (const updater of container.particles.updaters) {\n                if (updater.beforeDraw) {\n                    updater.beforeDraw(particle);\n                }\n                if (updater.getColorStyles) {\n                    const { fill, stroke } = updater.getColorStyles(particle, ctx, radius, zOpacity);\n                    if (fill) {\n                        colorStyles.fill = fill;\n                    }\n                    if (stroke) {\n                        colorStyles.stroke = stroke;\n                    }\n                }\n            }\n            (0, CanvasUtils_1.drawParticle)(container, ctx, particle, delta, colorStyles, options.backgroundMask.enable, options.backgroundMask.composite, radius * zSizeFactor, zOpacity, particle.options.shadow);\n            for (const updater of container.particles.updaters) {\n                if (updater.afterDraw) {\n                    updater.afterDraw(particle);\n                }\n            }\n        });\n    }\n    drawPlugin(plugin, delta) {\n        this.draw((ctx) => {\n            (0, CanvasUtils_1.drawPlugin)(ctx, plugin, delta);\n        });\n    }\n    drawParticlePlugin(plugin, particle, delta) {\n        this.draw((ctx) => {\n            (0, CanvasUtils_1.drawParticlePlugin)(ctx, plugin, particle, delta);\n        });\n    }\n    initBackground() {\n        const options = this.container.actualOptions, background = options.background, element = this.element, elementStyle = element === null || element === void 0 ? void 0 : element.style;\n        if (!elementStyle) {\n            return;\n        }\n        if (background.color) {\n            const color = (0, ColorUtils_1.colorToRgb)(background.color);\n            elementStyle.backgroundColor = color ? (0, ColorUtils_1.getStyleFromRgb)(color, background.opacity) : \"\";\n        }\n        else {\n            elementStyle.backgroundColor = \"\";\n        }\n        elementStyle.backgroundImage = background.image || \"\";\n        elementStyle.backgroundPosition = background.position || \"\";\n        elementStyle.backgroundRepeat = background.repeat || \"\";\n        elementStyle.backgroundSize = background.size || \"\";\n    }\n    draw(cb) {\n        if (!this.context) {\n            return;\n        }\n        return cb(this.context);\n    }\n    initCover() {\n        const options = this.container.actualOptions, cover = options.backgroundMask.cover, color = cover.color, coverRgb = (0, ColorUtils_1.colorToRgb)(color);\n        if (coverRgb) {\n            const coverColor = {\n                r: coverRgb.r,\n                g: coverRgb.g,\n                b: coverRgb.b,\n                a: cover.opacity,\n            };\n            this.coverColorStyle = (0, ColorUtils_1.getStyleFromRgb)(coverColor, coverColor.a);\n        }\n    }\n    initTrail() {\n        const options = this.container.actualOptions, trail = options.particles.move.trail, fillColor = (0, ColorUtils_1.colorToRgb)(trail.fillColor);\n        if (fillColor) {\n            const trail = options.particles.move.trail;\n            this.trailFillColor = {\n                r: fillColor.r,\n                g: fillColor.g,\n                b: fillColor.b,\n                a: 1 / trail.length,\n            };\n        }\n    }\n    getPluginParticleColors(particle) {\n        let fColor, sColor;\n        for (const [, plugin] of this.container.plugins) {\n            if (!fColor && plugin.particleFillColor) {\n                fColor = (0, ColorUtils_1.colorToHsl)(plugin.particleFillColor(particle));\n            }\n            if (!sColor && plugin.particleStrokeColor) {\n                sColor = (0, ColorUtils_1.colorToHsl)(plugin.particleStrokeColor(particle));\n            }\n            if (fColor && sColor) {\n                break;\n            }\n        }\n        return [fColor, sColor];\n    }\n    initStyle() {\n        const element = this.element, options = this.container.actualOptions;\n        if (!element) {\n            return;\n        }\n        const originalStyle = this.originalStyle;\n        if (options.fullScreen.enable) {\n            this.originalStyle = (0, Utils_1.deepExtend)({}, element.style);\n            element.style.setProperty(\"position\", \"fixed\", \"important\");\n            element.style.setProperty(\"z-index\", options.fullScreen.zIndex.toString(10), \"important\");\n            element.style.setProperty(\"top\", \"0\", \"important\");\n            element.style.setProperty(\"left\", \"0\", \"important\");\n            element.style.setProperty(\"width\", \"100%\", \"important\");\n            element.style.setProperty(\"height\", \"100%\", \"important\");\n        }\n        else if (originalStyle) {\n            element.style.position = originalStyle.position;\n            element.style.zIndex = originalStyle.zIndex;\n            element.style.top = originalStyle.top;\n            element.style.left = originalStyle.left;\n            element.style.width = originalStyle.width;\n            element.style.height = originalStyle.height;\n        }\n        for (const key in options.style) {\n            if (!key || !options.style) {\n                continue;\n            }\n            const value = options.style[key];\n            if (!value) {\n                continue;\n            }\n            element.style.setProperty(key, value, \"important\");\n        }\n    }\n    paintBase(baseColor) {\n        this.draw((ctx) => {\n            (0, CanvasUtils_1.paintBase)(ctx, this.size, baseColor);\n        });\n    }\n    lineStyle(p1, p2) {\n        return this.draw((ctx) => {\n            const options = this.container.actualOptions, connectOptions = options.interactivity.modes.connect;\n            return (0, CanvasUtils_1.gradient)(ctx, p1, p2, connectOptions.links.opacity);\n        });\n    }\n}\nexports.Canvas = Canvas;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}