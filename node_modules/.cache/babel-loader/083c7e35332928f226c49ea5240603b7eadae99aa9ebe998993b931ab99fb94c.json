{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Grabber = void 0;\nconst ColorUtils_1 = require(\"../../../Utils/ColorUtils\");\nconst Constants_1 = require(\"../../../Core/Utils/Constants\");\nconst ExternalInteractorBase_1 = require(\"../../../Core/Utils/ExternalInteractorBase\");\nconst NumberUtils_1 = require(\"../../../Utils/NumberUtils\");\nconst Utils_1 = require(\"../../../Utils/Utils\");\nclass Grabber extends ExternalInteractorBase_1.ExternalInteractorBase {\n  constructor(container) {\n    super(container);\n  }\n  isEnabled() {\n    const container = this.container,\n      mouse = container.interactivity.mouse,\n      events = container.actualOptions.interactivity.events;\n    return events.onHover.enable && !!mouse.position && (0, Utils_1.isInArray)(\"grab\", events.onHover.mode);\n  }\n  reset() {}\n  async interact() {\n    var _a;\n    const container = this.container,\n      options = container.actualOptions,\n      interactivity = options.interactivity;\n    if (!interactivity.events.onHover.enable || container.interactivity.status !== Constants_1.Constants.mouseMoveEvent) {\n      return;\n    }\n    const mousePos = container.interactivity.mouse.position;\n    if (!mousePos) {\n      return;\n    }\n    const distance = container.retina.grabModeDistance,\n      query = container.particles.quadTree.queryCircle(mousePos, distance);\n    for (const particle of query) {\n      const pos = particle.getPosition(),\n        pointDistance = (0, NumberUtils_1.getDistance)(pos, mousePos);\n      if (pointDistance > distance) {\n        continue;\n      }\n      const grabLineOptions = interactivity.modes.grab.links,\n        lineOpacity = grabLineOptions.opacity,\n        opacityLine = lineOpacity - pointDistance * lineOpacity / distance;\n      if (opacityLine <= 0) {\n        continue;\n      }\n      const optColor = (_a = grabLineOptions.color) !== null && _a !== void 0 ? _a : particle.options.links.color;\n      if (!container.particles.grabLineColor) {\n        const linksOptions = options.interactivity.modes.grab.links;\n        container.particles.grabLineColor = (0, ColorUtils_1.getLinkRandomColor)(optColor, linksOptions.blink, linksOptions.consent);\n      }\n      const colorLine = (0, ColorUtils_1.getLinkColor)(particle, undefined, container.particles.grabLineColor);\n      if (!colorLine) {\n        return;\n      }\n      container.canvas.drawGrabLine(particle, colorLine, opacityLine, mousePos);\n    }\n  }\n}\nexports.Grabber = Grabber;","map":{"version":3,"names":["Object","defineProperty","exports","value","Grabber","ColorUtils_1","require","Constants_1","ExternalInteractorBase_1","NumberUtils_1","Utils_1","ExternalInteractorBase","constructor","container","isEnabled","mouse","interactivity","events","actualOptions","onHover","enable","position","isInArray","mode","reset","interact","_a","options","status","Constants","mouseMoveEvent","mousePos","distance","retina","grabModeDistance","query","particles","quadTree","queryCircle","particle","pos","getPosition","pointDistance","getDistance","grabLineOptions","modes","grab","links","lineOpacity","opacity","opacityLine","optColor","color","grabLineColor","linksOptions","getLinkRandomColor","blink","consent","colorLine","getLinkColor","undefined","canvas","drawGrabLine"],"sources":["D:/Sergio/Portfolio DeadLine(09 Oct)/portfoliofront/node_modules/tsparticles/cjs/Interactions/External/Grab/Grabber.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Grabber = void 0;\nconst ColorUtils_1 = require(\"../../../Utils/ColorUtils\");\nconst Constants_1 = require(\"../../../Core/Utils/Constants\");\nconst ExternalInteractorBase_1 = require(\"../../../Core/Utils/ExternalInteractorBase\");\nconst NumberUtils_1 = require(\"../../../Utils/NumberUtils\");\nconst Utils_1 = require(\"../../../Utils/Utils\");\nclass Grabber extends ExternalInteractorBase_1.ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    isEnabled() {\n        const container = this.container, mouse = container.interactivity.mouse, events = container.actualOptions.interactivity.events;\n        return events.onHover.enable && !!mouse.position && (0, Utils_1.isInArray)(\"grab\", events.onHover.mode);\n    }\n    reset() {\n    }\n    async interact() {\n        var _a;\n        const container = this.container, options = container.actualOptions, interactivity = options.interactivity;\n        if (!interactivity.events.onHover.enable || container.interactivity.status !== Constants_1.Constants.mouseMoveEvent) {\n            return;\n        }\n        const mousePos = container.interactivity.mouse.position;\n        if (!mousePos) {\n            return;\n        }\n        const distance = container.retina.grabModeDistance, query = container.particles.quadTree.queryCircle(mousePos, distance);\n        for (const particle of query) {\n            const pos = particle.getPosition(), pointDistance = (0, NumberUtils_1.getDistance)(pos, mousePos);\n            if (pointDistance > distance) {\n                continue;\n            }\n            const grabLineOptions = interactivity.modes.grab.links, lineOpacity = grabLineOptions.opacity, opacityLine = lineOpacity - (pointDistance * lineOpacity) / distance;\n            if (opacityLine <= 0) {\n                continue;\n            }\n            const optColor = (_a = grabLineOptions.color) !== null && _a !== void 0 ? _a : particle.options.links.color;\n            if (!container.particles.grabLineColor) {\n                const linksOptions = options.interactivity.modes.grab.links;\n                container.particles.grabLineColor = (0, ColorUtils_1.getLinkRandomColor)(optColor, linksOptions.blink, linksOptions.consent);\n            }\n            const colorLine = (0, ColorUtils_1.getLinkColor)(particle, undefined, container.particles.grabLineColor);\n            if (!colorLine) {\n                return;\n            }\n            container.canvas.drawGrabLine(particle, colorLine, opacityLine, mousePos);\n        }\n    }\n}\nexports.Grabber = Grabber;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}