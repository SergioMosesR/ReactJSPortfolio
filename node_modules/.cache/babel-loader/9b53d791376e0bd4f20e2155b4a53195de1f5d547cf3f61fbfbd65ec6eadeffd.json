{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Collider = void 0;\nconst Utils_1 = require(\"../../../Utils/Utils\");\nconst NumberUtils_1 = require(\"../../../Utils/NumberUtils\");\nconst ParticlesInteractorBase_1 = require(\"../../../Core/Utils/ParticlesInteractorBase\");\nfunction bounce(p1, p2) {\n  (0, Utils_1.circleBounce)((0, Utils_1.circleBounceDataFromParticle)(p1), (0, Utils_1.circleBounceDataFromParticle)(p2));\n}\nfunction destroy(p1, p2) {\n  if (!p1.unbreakable && !p2.unbreakable) {\n    bounce(p1, p2);\n  }\n  if (p1.getRadius() === undefined && p2.getRadius() !== undefined) {\n    p1.destroy();\n  } else if (p1.getRadius() !== undefined && p2.getRadius() === undefined) {\n    p2.destroy();\n  } else if (p1.getRadius() !== undefined && p2.getRadius() !== undefined) {\n    if (p1.getRadius() >= p2.getRadius()) {\n      p2.destroy();\n    } else {\n      p1.destroy();\n    }\n  }\n}\nclass Collider extends ParticlesInteractorBase_1.ParticlesInteractorBase {\n  constructor(container) {\n    super(container);\n  }\n  isEnabled(particle) {\n    return particle.options.collisions.enable;\n  }\n  reset() {}\n  async interact(p1) {\n    const container = this.container,\n      pos1 = p1.getPosition(),\n      radius1 = p1.getRadius(),\n      query = container.particles.quadTree.queryCircle(pos1, radius1 * 2);\n    for (const p2 of query) {\n      if (p1 === p2 || !p2.options.collisions.enable || p1.options.collisions.mode !== p2.options.collisions.mode || p2.destroyed || p2.spawning) {\n        continue;\n      }\n      const pos2 = p2.getPosition();\n      if (Math.round(pos1.z) !== Math.round(pos2.z)) {\n        continue;\n      }\n      const dist = (0, NumberUtils_1.getDistance)(pos1, pos2),\n        radius2 = p2.getRadius(),\n        distP = radius1 + radius2;\n      if (dist <= distP) {\n        this.resolveCollision(p1, p2);\n      }\n    }\n  }\n  resolveCollision(p1, p2) {\n    switch (p1.options.collisions.mode) {\n      case \"absorb\":\n        this.absorb(p1, p2);\n        break;\n      case \"bounce\":\n        bounce(p1, p2);\n        break;\n      case \"destroy\":\n        destroy(p1, p2);\n        break;\n    }\n  }\n  absorb(p1, p2) {\n    const container = this.container,\n      fps = container.fpsLimit / 1000;\n    if (p1.getRadius() === undefined && p2.getRadius() !== undefined) {\n      p1.destroy();\n    } else if (p1.getRadius() !== undefined && p2.getRadius() === undefined) {\n      p2.destroy();\n    } else if (p1.getRadius() !== undefined && p2.getRadius() !== undefined) {\n      if (p1.getRadius() >= p2.getRadius()) {\n        const factor = (0, NumberUtils_1.clamp)(p1.getRadius() / p2.getRadius(), 0, p2.getRadius()) * fps;\n        p1.size.value += factor;\n        p2.size.value -= factor;\n        if (p2.getRadius() <= container.retina.pixelRatio) {\n          p2.size.value = 0;\n          p2.destroy();\n        }\n      } else {\n        const factor = (0, NumberUtils_1.clamp)(p2.getRadius() / p1.getRadius(), 0, p1.getRadius()) * fps;\n        p1.size.value -= factor;\n        p2.size.value += factor;\n        if (p1.getRadius() <= container.retina.pixelRatio) {\n          p1.size.value = 0;\n          p1.destroy();\n        }\n      }\n    }\n  }\n}\nexports.Collider = Collider;","map":{"version":3,"names":["Object","defineProperty","exports","value","Collider","Utils_1","require","NumberUtils_1","ParticlesInteractorBase_1","bounce","p1","p2","circleBounce","circleBounceDataFromParticle","destroy","unbreakable","getRadius","undefined","ParticlesInteractorBase","constructor","container","isEnabled","particle","options","collisions","enable","reset","interact","pos1","getPosition","radius1","query","particles","quadTree","queryCircle","mode","destroyed","spawning","pos2","Math","round","z","dist","getDistance","radius2","distP","resolveCollision","absorb","fps","fpsLimit","factor","clamp","size","retina","pixelRatio"],"sources":["D:/Sergio/Portfolio DeadLine(09 Oct)/portfoliofront/node_modules/tsparticles/cjs/Interactions/Particles/Collisions/Collider.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Collider = void 0;\nconst Utils_1 = require(\"../../../Utils/Utils\");\nconst NumberUtils_1 = require(\"../../../Utils/NumberUtils\");\nconst ParticlesInteractorBase_1 = require(\"../../../Core/Utils/ParticlesInteractorBase\");\nfunction bounce(p1, p2) {\n    (0, Utils_1.circleBounce)((0, Utils_1.circleBounceDataFromParticle)(p1), (0, Utils_1.circleBounceDataFromParticle)(p2));\n}\nfunction destroy(p1, p2) {\n    if (!p1.unbreakable && !p2.unbreakable) {\n        bounce(p1, p2);\n    }\n    if (p1.getRadius() === undefined && p2.getRadius() !== undefined) {\n        p1.destroy();\n    }\n    else if (p1.getRadius() !== undefined && p2.getRadius() === undefined) {\n        p2.destroy();\n    }\n    else if (p1.getRadius() !== undefined && p2.getRadius() !== undefined) {\n        if (p1.getRadius() >= p2.getRadius()) {\n            p2.destroy();\n        }\n        else {\n            p1.destroy();\n        }\n    }\n}\nclass Collider extends ParticlesInteractorBase_1.ParticlesInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    isEnabled(particle) {\n        return particle.options.collisions.enable;\n    }\n    reset() {\n    }\n    async interact(p1) {\n        const container = this.container, pos1 = p1.getPosition(), radius1 = p1.getRadius(), query = container.particles.quadTree.queryCircle(pos1, radius1 * 2);\n        for (const p2 of query) {\n            if (p1 === p2 ||\n                !p2.options.collisions.enable ||\n                p1.options.collisions.mode !== p2.options.collisions.mode ||\n                p2.destroyed ||\n                p2.spawning) {\n                continue;\n            }\n            const pos2 = p2.getPosition();\n            if (Math.round(pos1.z) !== Math.round(pos2.z)) {\n                continue;\n            }\n            const dist = (0, NumberUtils_1.getDistance)(pos1, pos2), radius2 = p2.getRadius(), distP = radius1 + radius2;\n            if (dist <= distP) {\n                this.resolveCollision(p1, p2);\n            }\n        }\n    }\n    resolveCollision(p1, p2) {\n        switch (p1.options.collisions.mode) {\n            case \"absorb\":\n                this.absorb(p1, p2);\n                break;\n            case \"bounce\":\n                bounce(p1, p2);\n                break;\n            case \"destroy\":\n                destroy(p1, p2);\n                break;\n        }\n    }\n    absorb(p1, p2) {\n        const container = this.container, fps = container.fpsLimit / 1000;\n        if (p1.getRadius() === undefined && p2.getRadius() !== undefined) {\n            p1.destroy();\n        }\n        else if (p1.getRadius() !== undefined && p2.getRadius() === undefined) {\n            p2.destroy();\n        }\n        else if (p1.getRadius() !== undefined && p2.getRadius() !== undefined) {\n            if (p1.getRadius() >= p2.getRadius()) {\n                const factor = (0, NumberUtils_1.clamp)(p1.getRadius() / p2.getRadius(), 0, p2.getRadius()) * fps;\n                p1.size.value += factor;\n                p2.size.value -= factor;\n                if (p2.getRadius() <= container.retina.pixelRatio) {\n                    p2.size.value = 0;\n                    p2.destroy();\n                }\n            }\n            else {\n                const factor = (0, NumberUtils_1.clamp)(p2.getRadius() / p1.getRadius(), 0, p1.getRadius()) * fps;\n                p1.size.value -= factor;\n                p2.size.value += factor;\n                if (p1.getRadius() <= container.retina.pixelRatio) {\n                    p1.size.value = 0;\n                    p1.destroy();\n                }\n            }\n        }\n    }\n}\nexports.Collider = Collider;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}