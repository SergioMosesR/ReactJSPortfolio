{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.QuadTree = void 0;\nconst Circle_1 = require(\"./Circle\");\nconst CircleWarp_1 = require(\"./CircleWarp\");\nconst Rectangle_1 = require(\"./Rectangle\");\nconst NumberUtils_1 = require(\"../../Utils/NumberUtils\");\nclass QuadTree {\n  constructor(rectangle, capacity) {\n    this.rectangle = rectangle;\n    this.capacity = capacity;\n    this.points = [];\n    this.divided = false;\n  }\n  insert(point) {\n    var _a, _b, _c, _d, _e;\n    if (!this.rectangle.contains(point.position)) {\n      return false;\n    }\n    if (this.points.length < this.capacity) {\n      this.points.push(point);\n      return true;\n    }\n    if (!this.divided) {\n      this.subdivide();\n    }\n    return (_e = ((_a = this.northEast) === null || _a === void 0 ? void 0 : _a.insert(point)) || ((_b = this.northWest) === null || _b === void 0 ? void 0 : _b.insert(point)) || ((_c = this.southEast) === null || _c === void 0 ? void 0 : _c.insert(point)) || ((_d = this.southWest) === null || _d === void 0 ? void 0 : _d.insert(point))) !== null && _e !== void 0 ? _e : false;\n  }\n  queryCircle(position, radius) {\n    return this.query(new Circle_1.Circle(position.x, position.y, radius));\n  }\n  queryCircleWarp(position, radius, containerOrSize) {\n    const container = containerOrSize,\n      size = containerOrSize;\n    return this.query(new CircleWarp_1.CircleWarp(position.x, position.y, radius, container.canvas !== undefined ? container.canvas.size : size));\n  }\n  queryRectangle(position, size) {\n    return this.query(new Rectangle_1.Rectangle(position.x, position.y, size.width, size.height));\n  }\n  query(range, found) {\n    var _a, _b, _c, _d;\n    const res = found !== null && found !== void 0 ? found : [];\n    if (!range.intersects(this.rectangle)) {\n      return [];\n    }\n    for (const p of this.points) {\n      if (!range.contains(p.position) && (0, NumberUtils_1.getDistance)(range.position, p.position) > p.particle.getRadius()) {\n        continue;\n      }\n      res.push(p.particle);\n    }\n    if (this.divided) {\n      (_a = this.northEast) === null || _a === void 0 ? void 0 : _a.query(range, res);\n      (_b = this.northWest) === null || _b === void 0 ? void 0 : _b.query(range, res);\n      (_c = this.southEast) === null || _c === void 0 ? void 0 : _c.query(range, res);\n      (_d = this.southWest) === null || _d === void 0 ? void 0 : _d.query(range, res);\n    }\n    return res;\n  }\n  subdivide() {\n    const x = this.rectangle.position.x,\n      y = this.rectangle.position.y,\n      w = this.rectangle.size.width,\n      h = this.rectangle.size.height,\n      capacity = this.capacity;\n    this.northEast = new QuadTree(new Rectangle_1.Rectangle(x, y, w / 2, h / 2), capacity);\n    this.northWest = new QuadTree(new Rectangle_1.Rectangle(x + w / 2, y, w / 2, h / 2), capacity);\n    this.southEast = new QuadTree(new Rectangle_1.Rectangle(x, y + h / 2, w / 2, h / 2), capacity);\n    this.southWest = new QuadTree(new Rectangle_1.Rectangle(x + w / 2, y + h / 2, w / 2, h / 2), capacity);\n    this.divided = true;\n  }\n}\nexports.QuadTree = QuadTree;","map":{"version":3,"names":["Object","defineProperty","exports","value","QuadTree","Circle_1","require","CircleWarp_1","Rectangle_1","NumberUtils_1","constructor","rectangle","capacity","points","divided","insert","point","_a","_b","_c","_d","_e","contains","position","length","push","subdivide","northEast","northWest","southEast","southWest","queryCircle","radius","query","Circle","x","y","queryCircleWarp","containerOrSize","container","size","CircleWarp","canvas","undefined","queryRectangle","Rectangle","width","height","range","found","res","intersects","p","getDistance","particle","getRadius","w","h"],"sources":["D:/Sergio/Portfolio DeadLine(09 Oct)/portfoliofront/node_modules/tsparticles/cjs/Core/Utils/QuadTree.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.QuadTree = void 0;\nconst Circle_1 = require(\"./Circle\");\nconst CircleWarp_1 = require(\"./CircleWarp\");\nconst Rectangle_1 = require(\"./Rectangle\");\nconst NumberUtils_1 = require(\"../../Utils/NumberUtils\");\nclass QuadTree {\n    constructor(rectangle, capacity) {\n        this.rectangle = rectangle;\n        this.capacity = capacity;\n        this.points = [];\n        this.divided = false;\n    }\n    insert(point) {\n        var _a, _b, _c, _d, _e;\n        if (!this.rectangle.contains(point.position)) {\n            return false;\n        }\n        if (this.points.length < this.capacity) {\n            this.points.push(point);\n            return true;\n        }\n        if (!this.divided) {\n            this.subdivide();\n        }\n        return ((_e = (((_a = this.northEast) === null || _a === void 0 ? void 0 : _a.insert(point)) ||\n            ((_b = this.northWest) === null || _b === void 0 ? void 0 : _b.insert(point)) ||\n            ((_c = this.southEast) === null || _c === void 0 ? void 0 : _c.insert(point)) ||\n            ((_d = this.southWest) === null || _d === void 0 ? void 0 : _d.insert(point)))) !== null && _e !== void 0 ? _e : false);\n    }\n    queryCircle(position, radius) {\n        return this.query(new Circle_1.Circle(position.x, position.y, radius));\n    }\n    queryCircleWarp(position, radius, containerOrSize) {\n        const container = containerOrSize, size = containerOrSize;\n        return this.query(new CircleWarp_1.CircleWarp(position.x, position.y, radius, container.canvas !== undefined ? container.canvas.size : size));\n    }\n    queryRectangle(position, size) {\n        return this.query(new Rectangle_1.Rectangle(position.x, position.y, size.width, size.height));\n    }\n    query(range, found) {\n        var _a, _b, _c, _d;\n        const res = found !== null && found !== void 0 ? found : [];\n        if (!range.intersects(this.rectangle)) {\n            return [];\n        }\n        for (const p of this.points) {\n            if (!range.contains(p.position) && (0, NumberUtils_1.getDistance)(range.position, p.position) > p.particle.getRadius()) {\n                continue;\n            }\n            res.push(p.particle);\n        }\n        if (this.divided) {\n            (_a = this.northEast) === null || _a === void 0 ? void 0 : _a.query(range, res);\n            (_b = this.northWest) === null || _b === void 0 ? void 0 : _b.query(range, res);\n            (_c = this.southEast) === null || _c === void 0 ? void 0 : _c.query(range, res);\n            (_d = this.southWest) === null || _d === void 0 ? void 0 : _d.query(range, res);\n        }\n        return res;\n    }\n    subdivide() {\n        const x = this.rectangle.position.x, y = this.rectangle.position.y, w = this.rectangle.size.width, h = this.rectangle.size.height, capacity = this.capacity;\n        this.northEast = new QuadTree(new Rectangle_1.Rectangle(x, y, w / 2, h / 2), capacity);\n        this.northWest = new QuadTree(new Rectangle_1.Rectangle(x + w / 2, y, w / 2, h / 2), capacity);\n        this.southEast = new QuadTree(new Rectangle_1.Rectangle(x, y + h / 2, w / 2, h / 2), capacity);\n        this.southWest = new QuadTree(new Rectangle_1.Rectangle(x + w / 2, y + h / 2, w / 2, h / 2), capacity);\n        this.divided = true;\n    }\n}\nexports.QuadTree = QuadTree;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}