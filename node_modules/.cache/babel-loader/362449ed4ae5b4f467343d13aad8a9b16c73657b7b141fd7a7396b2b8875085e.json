{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AngleUpdater = void 0;\nconst NumberUtils_1 = require(\"../../Utils/NumberUtils\");\nfunction updateAngle(particle, delta) {\n  var _a;\n  const rotate = particle.rotate;\n  if (!rotate) {\n    return;\n  }\n  const rotateOptions = particle.options.rotate;\n  const rotateAnimation = rotateOptions.animation;\n  const speed = ((_a = rotate.velocity) !== null && _a !== void 0 ? _a : 0) * delta.factor;\n  const max = 2 * Math.PI;\n  if (!rotateAnimation.enable) {\n    return;\n  }\n  switch (rotate.status) {\n    case 0:\n      rotate.value += speed;\n      if (rotate.value > max) {\n        rotate.value -= max;\n      }\n      break;\n    case 1:\n    default:\n      rotate.value -= speed;\n      if (rotate.value < 0) {\n        rotate.value += max;\n      }\n      break;\n  }\n}\nclass AngleUpdater {\n  constructor(container) {\n    this.container = container;\n  }\n  init(particle) {\n    const rotateOptions = particle.options.rotate;\n    particle.rotate = {\n      enable: rotateOptions.animation.enable,\n      value: (0, NumberUtils_1.getRangeValue)(rotateOptions.value) * Math.PI / 180\n    };\n    let rotateDirection = rotateOptions.direction;\n    if (rotateDirection === \"random\") {\n      const index = Math.floor(Math.random() * 2);\n      rotateDirection = index > 0 ? \"counter-clockwise\" : \"clockwise\";\n    }\n    switch (rotateDirection) {\n      case \"counter-clockwise\":\n      case \"counterClockwise\":\n        particle.rotate.status = 1;\n        break;\n      case \"clockwise\":\n        particle.rotate.status = 0;\n        break;\n    }\n    const rotateAnimation = particle.options.rotate.animation;\n    if (rotateAnimation.enable) {\n      particle.rotate.velocity = (0, NumberUtils_1.getRangeValue)(rotateAnimation.speed) / 360 * this.container.retina.reduceFactor;\n      if (!rotateAnimation.sync) {\n        particle.rotate.velocity *= Math.random();\n      }\n    }\n  }\n  isEnabled(particle) {\n    const rotate = particle.options.rotate;\n    const rotateAnimation = rotate.animation;\n    return !particle.destroyed && !particle.spawning && !rotate.path && rotateAnimation.enable;\n  }\n  update(particle, delta) {\n    if (!this.isEnabled(particle)) {\n      return;\n    }\n    updateAngle(particle, delta);\n  }\n}\nexports.AngleUpdater = AngleUpdater;","map":{"version":3,"names":["Object","defineProperty","exports","value","AngleUpdater","NumberUtils_1","require","updateAngle","particle","delta","_a","rotate","rotateOptions","options","rotateAnimation","animation","speed","velocity","factor","max","Math","PI","enable","status","constructor","container","init","getRangeValue","rotateDirection","direction","index","floor","random","retina","reduceFactor","sync","isEnabled","destroyed","spawning","path","update"],"sources":["D:/Sergio/Portfolio DeadLine(09 Oct)/portfoliofront/node_modules/tsparticles/cjs/Updaters/Angle/AngleUpdater.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AngleUpdater = void 0;\nconst NumberUtils_1 = require(\"../../Utils/NumberUtils\");\nfunction updateAngle(particle, delta) {\n    var _a;\n    const rotate = particle.rotate;\n    if (!rotate) {\n        return;\n    }\n    const rotateOptions = particle.options.rotate;\n    const rotateAnimation = rotateOptions.animation;\n    const speed = ((_a = rotate.velocity) !== null && _a !== void 0 ? _a : 0) * delta.factor;\n    const max = 2 * Math.PI;\n    if (!rotateAnimation.enable) {\n        return;\n    }\n    switch (rotate.status) {\n        case 0:\n            rotate.value += speed;\n            if (rotate.value > max) {\n                rotate.value -= max;\n            }\n            break;\n        case 1:\n        default:\n            rotate.value -= speed;\n            if (rotate.value < 0) {\n                rotate.value += max;\n            }\n            break;\n    }\n}\nclass AngleUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const rotateOptions = particle.options.rotate;\n        particle.rotate = {\n            enable: rotateOptions.animation.enable,\n            value: ((0, NumberUtils_1.getRangeValue)(rotateOptions.value) * Math.PI) / 180,\n        };\n        let rotateDirection = rotateOptions.direction;\n        if (rotateDirection === \"random\") {\n            const index = Math.floor(Math.random() * 2);\n            rotateDirection = index > 0 ? \"counter-clockwise\" : \"clockwise\";\n        }\n        switch (rotateDirection) {\n            case \"counter-clockwise\":\n            case \"counterClockwise\":\n                particle.rotate.status = 1;\n                break;\n            case \"clockwise\":\n                particle.rotate.status = 0;\n                break;\n        }\n        const rotateAnimation = particle.options.rotate.animation;\n        if (rotateAnimation.enable) {\n            particle.rotate.velocity =\n                ((0, NumberUtils_1.getRangeValue)(rotateAnimation.speed) / 360) * this.container.retina.reduceFactor;\n            if (!rotateAnimation.sync) {\n                particle.rotate.velocity *= Math.random();\n            }\n        }\n    }\n    isEnabled(particle) {\n        const rotate = particle.options.rotate;\n        const rotateAnimation = rotate.animation;\n        return !particle.destroyed && !particle.spawning && !rotate.path && rotateAnimation.enable;\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateAngle(particle, delta);\n    }\n}\nexports.AngleUpdater = AngleUpdater;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}