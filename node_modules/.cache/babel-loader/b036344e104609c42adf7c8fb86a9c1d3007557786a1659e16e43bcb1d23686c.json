{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Attractor = void 0;\nconst NumberUtils_1 = require(\"../../../Utils/NumberUtils\");\nconst Circle_1 = require(\"../../../Core/Utils/Circle\");\nconst Constants_1 = require(\"../../../Core/Utils/Constants\");\nconst ExternalInteractorBase_1 = require(\"../../../Core/Utils/ExternalInteractorBase\");\nconst Vector_1 = require(\"../../../Core/Utils/Vector\");\nconst Utils_1 = require(\"../../../Utils/Utils\");\nclass Attractor extends ExternalInteractorBase_1.ExternalInteractorBase {\n  constructor(container) {\n    super(container);\n    if (!container.attract) {\n      container.attract = {\n        particles: []\n      };\n    }\n    this.handleClickMode = mode => {\n      const options = this.container.actualOptions;\n      if (mode !== \"attract\") {\n        return;\n      }\n      if (!container.attract) {\n        container.attract = {\n          particles: []\n        };\n      }\n      container.attract.clicking = true;\n      container.attract.count = 0;\n      for (const particle of container.attract.particles) {\n        particle.velocity.setTo(particle.initialVelocity);\n      }\n      container.attract.particles = [];\n      container.attract.finish = false;\n      setTimeout(() => {\n        if (!container.destroyed) {\n          if (!container.attract) {\n            container.attract = {\n              particles: []\n            };\n          }\n          container.attract.clicking = false;\n        }\n      }, options.interactivity.modes.attract.duration * 1000);\n    };\n  }\n  isEnabled() {\n    const container = this.container,\n      options = container.actualOptions,\n      mouse = container.interactivity.mouse,\n      events = options.interactivity.events;\n    if ((!mouse.position || !events.onHover.enable) && (!mouse.clickPosition || !events.onClick.enable)) {\n      return false;\n    }\n    const hoverMode = events.onHover.mode,\n      clickMode = events.onClick.mode;\n    return (0, Utils_1.isInArray)(\"attract\", hoverMode) || (0, Utils_1.isInArray)(\"attract\", clickMode);\n  }\n  reset() {}\n  async interact() {\n    const container = this.container,\n      options = container.actualOptions,\n      mouseMoveStatus = container.interactivity.status === Constants_1.Constants.mouseMoveEvent,\n      events = options.interactivity.events,\n      hoverEnabled = events.onHover.enable,\n      hoverMode = events.onHover.mode,\n      clickEnabled = events.onClick.enable,\n      clickMode = events.onClick.mode;\n    if (mouseMoveStatus && hoverEnabled && (0, Utils_1.isInArray)(\"attract\", hoverMode)) {\n      this.hoverAttract();\n    } else if (clickEnabled && (0, Utils_1.isInArray)(\"attract\", clickMode)) {\n      this.clickAttract();\n    }\n  }\n  hoverAttract() {\n    const container = this.container;\n    const mousePos = container.interactivity.mouse.position;\n    if (!mousePos) {\n      return;\n    }\n    const attractRadius = container.retina.attractModeDistance;\n    this.processAttract(mousePos, attractRadius, new Circle_1.Circle(mousePos.x, mousePos.y, attractRadius));\n  }\n  processAttract(position, attractRadius, area) {\n    const container = this.container;\n    const attractOptions = container.actualOptions.interactivity.modes.attract;\n    const query = container.particles.quadTree.query(area);\n    for (const particle of query) {\n      const {\n        dx,\n        dy,\n        distance\n      } = (0, NumberUtils_1.getDistances)(particle.position, position);\n      const velocity = attractOptions.speed * attractOptions.factor;\n      const attractFactor = (0, NumberUtils_1.clamp)((0, NumberUtils_1.calcEasing)(1 - distance / attractRadius, attractOptions.easing) * velocity, 0, attractOptions.maxSpeed);\n      const normVec = Vector_1.Vector.create(distance === 0 ? velocity : dx / distance * attractFactor, distance === 0 ? velocity : dy / distance * attractFactor);\n      particle.position.subFrom(normVec);\n    }\n  }\n  clickAttract() {\n    const container = this.container;\n    if (!container.attract) {\n      container.attract = {\n        particles: []\n      };\n    }\n    if (!container.attract.finish) {\n      if (!container.attract.count) {\n        container.attract.count = 0;\n      }\n      container.attract.count++;\n      if (container.attract.count === container.particles.count) {\n        container.attract.finish = true;\n      }\n    }\n    if (container.attract.clicking) {\n      const mousePos = container.interactivity.mouse.clickPosition;\n      if (!mousePos) {\n        return;\n      }\n      const attractRadius = container.retina.attractModeDistance;\n      this.processAttract(mousePos, attractRadius, new Circle_1.Circle(mousePos.x, mousePos.y, attractRadius));\n    } else if (container.attract.clicking === false) {\n      container.attract.particles = [];\n    }\n    return;\n  }\n}\nexports.Attractor = Attractor;","map":{"version":3,"names":["Object","defineProperty","exports","value","Attractor","NumberUtils_1","require","Circle_1","Constants_1","ExternalInteractorBase_1","Vector_1","Utils_1","ExternalInteractorBase","constructor","container","attract","particles","handleClickMode","mode","options","actualOptions","clicking","count","particle","velocity","setTo","initialVelocity","finish","setTimeout","destroyed","interactivity","modes","duration","isEnabled","mouse","events","position","onHover","enable","clickPosition","onClick","hoverMode","clickMode","isInArray","reset","interact","mouseMoveStatus","status","Constants","mouseMoveEvent","hoverEnabled","clickEnabled","hoverAttract","clickAttract","mousePos","attractRadius","retina","attractModeDistance","processAttract","Circle","x","y","area","attractOptions","query","quadTree","dx","dy","distance","getDistances","speed","factor","attractFactor","clamp","calcEasing","easing","maxSpeed","normVec","Vector","create","subFrom"],"sources":["D:/Sergio/Portfolio DeadLine(09 Oct)/portfoliofront/node_modules/tsparticles/cjs/Interactions/External/Attract/Attractor.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Attractor = void 0;\nconst NumberUtils_1 = require(\"../../../Utils/NumberUtils\");\nconst Circle_1 = require(\"../../../Core/Utils/Circle\");\nconst Constants_1 = require(\"../../../Core/Utils/Constants\");\nconst ExternalInteractorBase_1 = require(\"../../../Core/Utils/ExternalInteractorBase\");\nconst Vector_1 = require(\"../../../Core/Utils/Vector\");\nconst Utils_1 = require(\"../../../Utils/Utils\");\nclass Attractor extends ExternalInteractorBase_1.ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        if (!container.attract) {\n            container.attract = { particles: [] };\n        }\n        this.handleClickMode = (mode) => {\n            const options = this.container.actualOptions;\n            if (mode !== \"attract\") {\n                return;\n            }\n            if (!container.attract) {\n                container.attract = { particles: [] };\n            }\n            container.attract.clicking = true;\n            container.attract.count = 0;\n            for (const particle of container.attract.particles) {\n                particle.velocity.setTo(particle.initialVelocity);\n            }\n            container.attract.particles = [];\n            container.attract.finish = false;\n            setTimeout(() => {\n                if (!container.destroyed) {\n                    if (!container.attract) {\n                        container.attract = { particles: [] };\n                    }\n                    container.attract.clicking = false;\n                }\n            }, options.interactivity.modes.attract.duration * 1000);\n        };\n    }\n    isEnabled() {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = options.interactivity.events;\n        if ((!mouse.position || !events.onHover.enable) && (!mouse.clickPosition || !events.onClick.enable)) {\n            return false;\n        }\n        const hoverMode = events.onHover.mode, clickMode = events.onClick.mode;\n        return (0, Utils_1.isInArray)(\"attract\", hoverMode) || (0, Utils_1.isInArray)(\"attract\", clickMode);\n    }\n    reset() {\n    }\n    async interact() {\n        const container = this.container, options = container.actualOptions, mouseMoveStatus = container.interactivity.status === Constants_1.Constants.mouseMoveEvent, events = options.interactivity.events, hoverEnabled = events.onHover.enable, hoverMode = events.onHover.mode, clickEnabled = events.onClick.enable, clickMode = events.onClick.mode;\n        if (mouseMoveStatus && hoverEnabled && (0, Utils_1.isInArray)(\"attract\", hoverMode)) {\n            this.hoverAttract();\n        }\n        else if (clickEnabled && (0, Utils_1.isInArray)(\"attract\", clickMode)) {\n            this.clickAttract();\n        }\n    }\n    hoverAttract() {\n        const container = this.container;\n        const mousePos = container.interactivity.mouse.position;\n        if (!mousePos) {\n            return;\n        }\n        const attractRadius = container.retina.attractModeDistance;\n        this.processAttract(mousePos, attractRadius, new Circle_1.Circle(mousePos.x, mousePos.y, attractRadius));\n    }\n    processAttract(position, attractRadius, area) {\n        const container = this.container;\n        const attractOptions = container.actualOptions.interactivity.modes.attract;\n        const query = container.particles.quadTree.query(area);\n        for (const particle of query) {\n            const { dx, dy, distance } = (0, NumberUtils_1.getDistances)(particle.position, position);\n            const velocity = attractOptions.speed * attractOptions.factor;\n            const attractFactor = (0, NumberUtils_1.clamp)((0, NumberUtils_1.calcEasing)(1 - distance / attractRadius, attractOptions.easing) * velocity, 0, attractOptions.maxSpeed);\n            const normVec = Vector_1.Vector.create(distance === 0 ? velocity : (dx / distance) * attractFactor, distance === 0 ? velocity : (dy / distance) * attractFactor);\n            particle.position.subFrom(normVec);\n        }\n    }\n    clickAttract() {\n        const container = this.container;\n        if (!container.attract) {\n            container.attract = { particles: [] };\n        }\n        if (!container.attract.finish) {\n            if (!container.attract.count) {\n                container.attract.count = 0;\n            }\n            container.attract.count++;\n            if (container.attract.count === container.particles.count) {\n                container.attract.finish = true;\n            }\n        }\n        if (container.attract.clicking) {\n            const mousePos = container.interactivity.mouse.clickPosition;\n            if (!mousePos) {\n                return;\n            }\n            const attractRadius = container.retina.attractModeDistance;\n            this.processAttract(mousePos, attractRadius, new Circle_1.Circle(mousePos.x, mousePos.y, attractRadius));\n        }\n        else if (container.attract.clicking === false) {\n            container.attract.particles = [];\n        }\n        return;\n    }\n}\nexports.Attractor = Attractor;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,SAAS,GAAG,KAAK,CAAC;AAC1B,MAAMC,aAAa,GAAGC,OAAO,CAAC,4BAA4B,CAAC;AAC3D,MAAMC,QAAQ,GAAGD,OAAO,CAAC,4BAA4B,CAAC;AACtD,MAAME,WAAW,GAAGF,OAAO,CAAC,+BAA+B,CAAC;AAC5D,MAAMG,wBAAwB,GAAGH,OAAO,CAAC,4CAA4C,CAAC;AACtF,MAAMI,QAAQ,GAAGJ,OAAO,CAAC,4BAA4B,CAAC;AACtD,MAAMK,OAAO,GAAGL,OAAO,CAAC,sBAAsB,CAAC;AAC/C,MAAMF,SAAS,SAASK,wBAAwB,CAACG,sBAAsB,CAAC;EACpEC,WAAWA,CAACC,SAAS,EAAE;IACnB,KAAK,CAACA,SAAS,CAAC;IAChB,IAAI,CAACA,SAAS,CAACC,OAAO,EAAE;MACpBD,SAAS,CAACC,OAAO,GAAG;QAAEC,SAAS,EAAE;MAAG,CAAC;IACzC;IACA,IAAI,CAACC,eAAe,GAAIC,IAAI,IAAK;MAC7B,MAAMC,OAAO,GAAG,IAAI,CAACL,SAAS,CAACM,aAAa;MAC5C,IAAIF,IAAI,KAAK,SAAS,EAAE;QACpB;MACJ;MACA,IAAI,CAACJ,SAAS,CAACC,OAAO,EAAE;QACpBD,SAAS,CAACC,OAAO,GAAG;UAAEC,SAAS,EAAE;QAAG,CAAC;MACzC;MACAF,SAAS,CAACC,OAAO,CAACM,QAAQ,GAAG,IAAI;MACjCP,SAAS,CAACC,OAAO,CAACO,KAAK,GAAG,CAAC;MAC3B,KAAK,MAAMC,QAAQ,IAAIT,SAAS,CAACC,OAAO,CAACC,SAAS,EAAE;QAChDO,QAAQ,CAACC,QAAQ,CAACC,KAAK,CAACF,QAAQ,CAACG,eAAe,CAAC;MACrD;MACAZ,SAAS,CAACC,OAAO,CAACC,SAAS,GAAG,EAAE;MAChCF,SAAS,CAACC,OAAO,CAACY,MAAM,GAAG,KAAK;MAChCC,UAAU,CAAC,MAAM;QACb,IAAI,CAACd,SAAS,CAACe,SAAS,EAAE;UACtB,IAAI,CAACf,SAAS,CAACC,OAAO,EAAE;YACpBD,SAAS,CAACC,OAAO,GAAG;cAAEC,SAAS,EAAE;YAAG,CAAC;UACzC;UACAF,SAAS,CAACC,OAAO,CAACM,QAAQ,GAAG,KAAK;QACtC;MACJ,CAAC,EAAEF,OAAO,CAACW,aAAa,CAACC,KAAK,CAAChB,OAAO,CAACiB,QAAQ,GAAG,IAAI,CAAC;IAC3D,CAAC;EACL;EACAC,SAASA,CAAA,EAAG;IACR,MAAMnB,SAAS,GAAG,IAAI,CAACA,SAAS;MAAEK,OAAO,GAAGL,SAAS,CAACM,aAAa;MAAEc,KAAK,GAAGpB,SAAS,CAACgB,aAAa,CAACI,KAAK;MAAEC,MAAM,GAAGhB,OAAO,CAACW,aAAa,CAACK,MAAM;IACjJ,IAAI,CAAC,CAACD,KAAK,CAACE,QAAQ,IAAI,CAACD,MAAM,CAACE,OAAO,CAACC,MAAM,MAAM,CAACJ,KAAK,CAACK,aAAa,IAAI,CAACJ,MAAM,CAACK,OAAO,CAACF,MAAM,CAAC,EAAE;MACjG,OAAO,KAAK;IAChB;IACA,MAAMG,SAAS,GAAGN,MAAM,CAACE,OAAO,CAACnB,IAAI;MAAEwB,SAAS,GAAGP,MAAM,CAACK,OAAO,CAACtB,IAAI;IACtE,OAAO,CAAC,CAAC,EAAEP,OAAO,CAACgC,SAAS,EAAE,SAAS,EAAEF,SAAS,CAAC,IAAI,CAAC,CAAC,EAAE9B,OAAO,CAACgC,SAAS,EAAE,SAAS,EAAED,SAAS,CAAC;EACvG;EACAE,KAAKA,CAAA,EAAG,CACR;EACA,MAAMC,QAAQA,CAAA,EAAG;IACb,MAAM/B,SAAS,GAAG,IAAI,CAACA,SAAS;MAAEK,OAAO,GAAGL,SAAS,CAACM,aAAa;MAAE0B,eAAe,GAAGhC,SAAS,CAACgB,aAAa,CAACiB,MAAM,KAAKvC,WAAW,CAACwC,SAAS,CAACC,cAAc;MAAEd,MAAM,GAAGhB,OAAO,CAACW,aAAa,CAACK,MAAM;MAAEe,YAAY,GAAGf,MAAM,CAACE,OAAO,CAACC,MAAM;MAAEG,SAAS,GAAGN,MAAM,CAACE,OAAO,CAACnB,IAAI;MAAEiC,YAAY,GAAGhB,MAAM,CAACK,OAAO,CAACF,MAAM;MAAEI,SAAS,GAAGP,MAAM,CAACK,OAAO,CAACtB,IAAI;IACnV,IAAI4B,eAAe,IAAII,YAAY,IAAI,CAAC,CAAC,EAAEvC,OAAO,CAACgC,SAAS,EAAE,SAAS,EAAEF,SAAS,CAAC,EAAE;MACjF,IAAI,CAACW,YAAY,CAAC,CAAC;IACvB,CAAC,MACI,IAAID,YAAY,IAAI,CAAC,CAAC,EAAExC,OAAO,CAACgC,SAAS,EAAE,SAAS,EAAED,SAAS,CAAC,EAAE;MACnE,IAAI,CAACW,YAAY,CAAC,CAAC;IACvB;EACJ;EACAD,YAAYA,CAAA,EAAG;IACX,MAAMtC,SAAS,GAAG,IAAI,CAACA,SAAS;IAChC,MAAMwC,QAAQ,GAAGxC,SAAS,CAACgB,aAAa,CAACI,KAAK,CAACE,QAAQ;IACvD,IAAI,CAACkB,QAAQ,EAAE;MACX;IACJ;IACA,MAAMC,aAAa,GAAGzC,SAAS,CAAC0C,MAAM,CAACC,mBAAmB;IAC1D,IAAI,CAACC,cAAc,CAACJ,QAAQ,EAAEC,aAAa,EAAE,IAAIhD,QAAQ,CAACoD,MAAM,CAACL,QAAQ,CAACM,CAAC,EAAEN,QAAQ,CAACO,CAAC,EAAEN,aAAa,CAAC,CAAC;EAC5G;EACAG,cAAcA,CAACtB,QAAQ,EAAEmB,aAAa,EAAEO,IAAI,EAAE;IAC1C,MAAMhD,SAAS,GAAG,IAAI,CAACA,SAAS;IAChC,MAAMiD,cAAc,GAAGjD,SAAS,CAACM,aAAa,CAACU,aAAa,CAACC,KAAK,CAAChB,OAAO;IAC1E,MAAMiD,KAAK,GAAGlD,SAAS,CAACE,SAAS,CAACiD,QAAQ,CAACD,KAAK,CAACF,IAAI,CAAC;IACtD,KAAK,MAAMvC,QAAQ,IAAIyC,KAAK,EAAE;MAC1B,MAAM;QAAEE,EAAE;QAAEC,EAAE;QAAEC;MAAS,CAAC,GAAG,CAAC,CAAC,EAAE/D,aAAa,CAACgE,YAAY,EAAE9C,QAAQ,CAACa,QAAQ,EAAEA,QAAQ,CAAC;MACzF,MAAMZ,QAAQ,GAAGuC,cAAc,CAACO,KAAK,GAAGP,cAAc,CAACQ,MAAM;MAC7D,MAAMC,aAAa,GAAG,CAAC,CAAC,EAAEnE,aAAa,CAACoE,KAAK,EAAE,CAAC,CAAC,EAAEpE,aAAa,CAACqE,UAAU,EAAE,CAAC,GAAGN,QAAQ,GAAGb,aAAa,EAAEQ,cAAc,CAACY,MAAM,CAAC,GAAGnD,QAAQ,EAAE,CAAC,EAAEuC,cAAc,CAACa,QAAQ,CAAC;MACzK,MAAMC,OAAO,GAAGnE,QAAQ,CAACoE,MAAM,CAACC,MAAM,CAACX,QAAQ,KAAK,CAAC,GAAG5C,QAAQ,GAAI0C,EAAE,GAAGE,QAAQ,GAAII,aAAa,EAAEJ,QAAQ,KAAK,CAAC,GAAG5C,QAAQ,GAAI2C,EAAE,GAAGC,QAAQ,GAAII,aAAa,CAAC;MAChKjD,QAAQ,CAACa,QAAQ,CAAC4C,OAAO,CAACH,OAAO,CAAC;IACtC;EACJ;EACAxB,YAAYA,CAAA,EAAG;IACX,MAAMvC,SAAS,GAAG,IAAI,CAACA,SAAS;IAChC,IAAI,CAACA,SAAS,CAACC,OAAO,EAAE;MACpBD,SAAS,CAACC,OAAO,GAAG;QAAEC,SAAS,EAAE;MAAG,CAAC;IACzC;IACA,IAAI,CAACF,SAAS,CAACC,OAAO,CAACY,MAAM,EAAE;MAC3B,IAAI,CAACb,SAAS,CAACC,OAAO,CAACO,KAAK,EAAE;QAC1BR,SAAS,CAACC,OAAO,CAACO,KAAK,GAAG,CAAC;MAC/B;MACAR,SAAS,CAACC,OAAO,CAACO,KAAK,EAAE;MACzB,IAAIR,SAAS,CAACC,OAAO,CAACO,KAAK,KAAKR,SAAS,CAACE,SAAS,CAACM,KAAK,EAAE;QACvDR,SAAS,CAACC,OAAO,CAACY,MAAM,GAAG,IAAI;MACnC;IACJ;IACA,IAAIb,SAAS,CAACC,OAAO,CAACM,QAAQ,EAAE;MAC5B,MAAMiC,QAAQ,GAAGxC,SAAS,CAACgB,aAAa,CAACI,KAAK,CAACK,aAAa;MAC5D,IAAI,CAACe,QAAQ,EAAE;QACX;MACJ;MACA,MAAMC,aAAa,GAAGzC,SAAS,CAAC0C,MAAM,CAACC,mBAAmB;MAC1D,IAAI,CAACC,cAAc,CAACJ,QAAQ,EAAEC,aAAa,EAAE,IAAIhD,QAAQ,CAACoD,MAAM,CAACL,QAAQ,CAACM,CAAC,EAAEN,QAAQ,CAACO,CAAC,EAAEN,aAAa,CAAC,CAAC;IAC5G,CAAC,MACI,IAAIzC,SAAS,CAACC,OAAO,CAACM,QAAQ,KAAK,KAAK,EAAE;MAC3CP,SAAS,CAACC,OAAO,CAACC,SAAS,GAAG,EAAE;IACpC;IACA;EACJ;AACJ;AACAd,OAAO,CAACE,SAAS,GAAGA,SAAS"},"metadata":{},"sourceType":"script","externalDependencies":[]}