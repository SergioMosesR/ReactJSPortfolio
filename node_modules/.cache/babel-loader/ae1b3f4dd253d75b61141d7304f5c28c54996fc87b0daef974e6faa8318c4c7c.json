{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TiltUpdater = void 0;\nconst NumberUtils_1 = require(\"../../Utils/NumberUtils\");\nfunction updateTilt(particle, delta) {\n  var _a;\n  if (!particle.tilt) {\n    return;\n  }\n  const tilt = particle.options.tilt;\n  const tiltAnimation = tilt.animation;\n  const speed = ((_a = particle.tilt.velocity) !== null && _a !== void 0 ? _a : 0) * delta.factor;\n  const max = 2 * Math.PI;\n  if (!tiltAnimation.enable) {\n    return;\n  }\n  switch (particle.tilt.status) {\n    case 0:\n      particle.tilt.value += speed;\n      if (particle.tilt.value > max) {\n        particle.tilt.value -= max;\n      }\n      break;\n    case 1:\n    default:\n      particle.tilt.value -= speed;\n      if (particle.tilt.value < 0) {\n        particle.tilt.value += max;\n      }\n      break;\n  }\n}\nclass TiltUpdater {\n  constructor(container) {\n    this.container = container;\n  }\n  init(particle) {\n    const tiltOptions = particle.options.tilt;\n    particle.tilt = {\n      enable: tiltOptions.enable,\n      value: (0, NumberUtils_1.getRangeValue)(tiltOptions.value) * Math.PI / 180,\n      sinDirection: Math.random() >= 0.5 ? 1 : -1,\n      cosDirection: Math.random() >= 0.5 ? 1 : -1\n    };\n    let tiltDirection = tiltOptions.direction;\n    if (tiltDirection === \"random\") {\n      const index = Math.floor(Math.random() * 2);\n      tiltDirection = index > 0 ? \"counter-clockwise\" : \"clockwise\";\n    }\n    switch (tiltDirection) {\n      case \"counter-clockwise\":\n      case \"counterClockwise\":\n        particle.tilt.status = 1;\n        break;\n      case \"clockwise\":\n        particle.tilt.status = 0;\n        break;\n    }\n    const tiltAnimation = particle.options.tilt.animation;\n    if (tiltAnimation.enable) {\n      particle.tilt.velocity = (0, NumberUtils_1.getRangeValue)(tiltAnimation.speed) / 360 * this.container.retina.reduceFactor;\n      if (!tiltAnimation.sync) {\n        particle.tilt.velocity *= Math.random();\n      }\n    }\n  }\n  isEnabled(particle) {\n    const tilt = particle.options.tilt;\n    const tiltAnimation = tilt.animation;\n    return !particle.destroyed && !particle.spawning && tiltAnimation.enable;\n  }\n  update(particle, delta) {\n    if (!this.isEnabled(particle)) {\n      return;\n    }\n    updateTilt(particle, delta);\n  }\n}\nexports.TiltUpdater = TiltUpdater;","map":{"version":3,"names":["Object","defineProperty","exports","value","TiltUpdater","NumberUtils_1","require","updateTilt","particle","delta","_a","tilt","options","tiltAnimation","animation","speed","velocity","factor","max","Math","PI","enable","status","constructor","container","init","tiltOptions","getRangeValue","sinDirection","random","cosDirection","tiltDirection","direction","index","floor","retina","reduceFactor","sync","isEnabled","destroyed","spawning","update"],"sources":["D:/Sergio/Portfolio DeadLine(09 Oct)/portfoliofront/node_modules/tsparticles/cjs/Updaters/Tilt/TiltUpdater.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TiltUpdater = void 0;\nconst NumberUtils_1 = require(\"../../Utils/NumberUtils\");\nfunction updateTilt(particle, delta) {\n    var _a;\n    if (!particle.tilt) {\n        return;\n    }\n    const tilt = particle.options.tilt;\n    const tiltAnimation = tilt.animation;\n    const speed = ((_a = particle.tilt.velocity) !== null && _a !== void 0 ? _a : 0) * delta.factor;\n    const max = 2 * Math.PI;\n    if (!tiltAnimation.enable) {\n        return;\n    }\n    switch (particle.tilt.status) {\n        case 0:\n            particle.tilt.value += speed;\n            if (particle.tilt.value > max) {\n                particle.tilt.value -= max;\n            }\n            break;\n        case 1:\n        default:\n            particle.tilt.value -= speed;\n            if (particle.tilt.value < 0) {\n                particle.tilt.value += max;\n            }\n            break;\n    }\n}\nclass TiltUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const tiltOptions = particle.options.tilt;\n        particle.tilt = {\n            enable: tiltOptions.enable,\n            value: ((0, NumberUtils_1.getRangeValue)(tiltOptions.value) * Math.PI) / 180,\n            sinDirection: Math.random() >= 0.5 ? 1 : -1,\n            cosDirection: Math.random() >= 0.5 ? 1 : -1,\n        };\n        let tiltDirection = tiltOptions.direction;\n        if (tiltDirection === \"random\") {\n            const index = Math.floor(Math.random() * 2);\n            tiltDirection = index > 0 ? \"counter-clockwise\" : \"clockwise\";\n        }\n        switch (tiltDirection) {\n            case \"counter-clockwise\":\n            case \"counterClockwise\":\n                particle.tilt.status = 1;\n                break;\n            case \"clockwise\":\n                particle.tilt.status = 0;\n                break;\n        }\n        const tiltAnimation = particle.options.tilt.animation;\n        if (tiltAnimation.enable) {\n            particle.tilt.velocity = ((0, NumberUtils_1.getRangeValue)(tiltAnimation.speed) / 360) * this.container.retina.reduceFactor;\n            if (!tiltAnimation.sync) {\n                particle.tilt.velocity *= Math.random();\n            }\n        }\n    }\n    isEnabled(particle) {\n        const tilt = particle.options.tilt;\n        const tiltAnimation = tilt.animation;\n        return !particle.destroyed && !particle.spawning && tiltAnimation.enable;\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateTilt(particle, delta);\n    }\n}\nexports.TiltUpdater = TiltUpdater;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}