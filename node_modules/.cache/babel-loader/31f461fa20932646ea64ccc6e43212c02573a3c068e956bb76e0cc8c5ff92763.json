{"ast":null,"code":"\"use strict\";\n\nvar __classPrivateFieldSet = this && this.__classPrivateFieldSet || function (receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n};\nvar __classPrivateFieldGet = this && this.__classPrivateFieldGet || function (receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _Particle_engine;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Particle = void 0;\nconst NumberUtils_1 = require(\"../Utils/NumberUtils\");\nconst ColorUtils_1 = require(\"../Utils/ColorUtils\");\nconst Utils_1 = require(\"../Utils/Utils\");\nconst ParticlesOptions_1 = require(\"../Options/Classes/Particles/ParticlesOptions\");\nconst Shape_1 = require(\"../Options/Classes/Particles/Shape/Shape\");\nconst Vector_1 = require(\"./Utils/Vector\");\nconst Vector3d_1 = require(\"./Utils/Vector3d\");\nconst CanvasUtils_1 = require(\"../Utils/CanvasUtils\");\nconst fixOutMode = data => {\n  if (!((0, Utils_1.isInArray)(data.outMode, data.checkModes) || (0, Utils_1.isInArray)(data.outMode, data.checkModes))) {\n    return;\n  }\n  if (data.coord > data.maxCoord - data.radius * 2) {\n    data.setCb(-data.radius);\n  } else if (data.coord < data.radius * 2) {\n    data.setCb(data.radius);\n  }\n};\nclass Particle {\n  constructor(engine, id, container, position, overrideOptions, group) {\n    var _a, _b, _c, _d, _e, _f, _g;\n    this.id = id;\n    this.container = container;\n    this.group = group;\n    _Particle_engine.set(this, void 0);\n    __classPrivateFieldSet(this, _Particle_engine, engine, \"f\");\n    this.fill = true;\n    this.close = true;\n    this.lastPathTime = 0;\n    this.destroyed = false;\n    this.unbreakable = false;\n    this.splitCount = 0;\n    this.misplaced = false;\n    this.retina = {\n      maxDistance: {}\n    };\n    this.ignoresResizeRatio = true;\n    const pxRatio = container.retina.pixelRatio,\n      mainOptions = container.actualOptions,\n      particlesOptions = new ParticlesOptions_1.ParticlesOptions();\n    particlesOptions.load(mainOptions.particles);\n    const shapeType = particlesOptions.shape.type,\n      reduceDuplicates = particlesOptions.reduceDuplicates;\n    this.shape = shapeType instanceof Array ? (0, Utils_1.itemFromArray)(shapeType, this.id, reduceDuplicates) : shapeType;\n    if (overrideOptions === null || overrideOptions === void 0 ? void 0 : overrideOptions.shape) {\n      if (overrideOptions.shape.type) {\n        const overrideShapeType = overrideOptions.shape.type;\n        this.shape = overrideShapeType instanceof Array ? (0, Utils_1.itemFromArray)(overrideShapeType, this.id, reduceDuplicates) : overrideShapeType;\n      }\n      const shapeOptions = new Shape_1.Shape();\n      shapeOptions.load(overrideOptions.shape);\n      if (this.shape) {\n        this.shapeData = this.loadShapeData(shapeOptions, reduceDuplicates);\n      }\n    } else {\n      this.shapeData = this.loadShapeData(particlesOptions.shape, reduceDuplicates);\n    }\n    if (overrideOptions !== undefined) {\n      particlesOptions.load(overrideOptions);\n    }\n    if (((_a = this.shapeData) === null || _a === void 0 ? void 0 : _a.particles) !== undefined) {\n      particlesOptions.load((_b = this.shapeData) === null || _b === void 0 ? void 0 : _b.particles);\n    }\n    this.fill = (_d = (_c = this.shapeData) === null || _c === void 0 ? void 0 : _c.fill) !== null && _d !== void 0 ? _d : this.fill;\n    this.close = (_f = (_e = this.shapeData) === null || _e === void 0 ? void 0 : _e.close) !== null && _f !== void 0 ? _f : this.close;\n    this.options = particlesOptions;\n    this.pathDelay = (0, NumberUtils_1.getValue)(this.options.move.path.delay) * 1000;\n    const zIndexValue = (0, NumberUtils_1.getRangeValue)(this.options.zIndex.value);\n    container.retina.initParticle(this);\n    const sizeOptions = this.options.size,\n      sizeRange = sizeOptions.value;\n    this.size = {\n      enable: sizeOptions.animation.enable,\n      value: (0, NumberUtils_1.getValue)(sizeOptions) * container.retina.pixelRatio,\n      max: (0, NumberUtils_1.getRangeMax)(sizeRange) * pxRatio,\n      min: (0, NumberUtils_1.getRangeMin)(sizeRange) * pxRatio,\n      loops: 0,\n      maxLoops: (0, NumberUtils_1.getRangeValue)(sizeOptions.animation.count)\n    };\n    const sizeAnimation = sizeOptions.animation;\n    if (sizeAnimation.enable) {\n      this.size.status = 0;\n      switch (sizeAnimation.startValue) {\n        case \"min\":\n          this.size.value = this.size.min;\n          this.size.status = 0;\n          break;\n        case \"random\":\n          this.size.value = (0, NumberUtils_1.randomInRange)(this.size) * pxRatio;\n          this.size.status = Math.random() >= 0.5 ? 0 : 1;\n          break;\n        case \"max\":\n        default:\n          this.size.value = this.size.max;\n          this.size.status = 1;\n          break;\n      }\n      this.size.velocity = ((_g = this.retina.sizeAnimationSpeed) !== null && _g !== void 0 ? _g : container.retina.sizeAnimationSpeed) / 100 * container.retina.reduceFactor;\n      if (!sizeAnimation.sync) {\n        this.size.velocity *= Math.random();\n      }\n    }\n    this.direction = (0, NumberUtils_1.getParticleDirectionAngle)(this.options.move.direction);\n    this.bubble = {\n      inRange: false\n    };\n    this.initialVelocity = this.calculateVelocity();\n    this.velocity = this.initialVelocity.copy();\n    this.moveDecay = 1 - (0, NumberUtils_1.getRangeValue)(this.options.move.decay);\n    const gravityOptions = this.options.move.gravity;\n    this.gravity = {\n      enable: gravityOptions.enable,\n      acceleration: (0, NumberUtils_1.getRangeValue)(gravityOptions.acceleration),\n      inverse: gravityOptions.inverse\n    };\n    this.position = this.calcPosition(container, position, (0, NumberUtils_1.clamp)(zIndexValue, 0, container.zLayers));\n    this.initialPosition = this.position.copy();\n    this.offset = Vector_1.Vector.origin;\n    const particles = container.particles;\n    particles.needsSort = particles.needsSort || particles.lastZIndex < this.position.z;\n    particles.lastZIndex = this.position.z;\n    this.zIndexFactor = this.position.z / container.zLayers;\n    this.sides = 24;\n    let drawer = container.drawers.get(this.shape);\n    if (!drawer) {\n      drawer = __classPrivateFieldGet(this, _Particle_engine, \"f\").plugins.getShapeDrawer(this.shape);\n      if (drawer) {\n        container.drawers.set(this.shape, drawer);\n      }\n    }\n    if (drawer === null || drawer === void 0 ? void 0 : drawer.loadShape) {\n      drawer === null || drawer === void 0 ? void 0 : drawer.loadShape(this);\n    }\n    const sideCountFunc = drawer === null || drawer === void 0 ? void 0 : drawer.getSidesCount;\n    if (sideCountFunc) {\n      this.sides = sideCountFunc(this);\n    }\n    this.life = this.loadLife();\n    this.spawning = this.life.delay > 0;\n    this.shadowColor = (0, ColorUtils_1.colorToRgb)(this.options.shadow.color);\n    for (const updater of container.particles.updaters) {\n      if (updater.init) {\n        updater.init(this);\n      }\n    }\n    if (drawer && drawer.particleInit) {\n      drawer.particleInit(container, this);\n    }\n    for (const [, plugin] of container.plugins) {\n      if (plugin.particleCreated) {\n        plugin.particleCreated(this);\n      }\n    }\n  }\n  isVisible() {\n    return !this.destroyed && !this.spawning && this.isInsideCanvas();\n  }\n  isInsideCanvas() {\n    const radius = this.getRadius(),\n      canvasSize = this.container.canvas.size;\n    return this.position.x >= -radius && this.position.y >= -radius && this.position.y <= canvasSize.height + radius && this.position.x <= canvasSize.width + radius;\n  }\n  draw(delta) {\n    const container = this.container;\n    for (const [, plugin] of container.plugins) {\n      container.canvas.drawParticlePlugin(plugin, this, delta);\n    }\n    container.canvas.drawParticle(this, delta);\n  }\n  getPosition() {\n    return {\n      x: this.position.x + this.offset.x,\n      y: this.position.y + this.offset.y,\n      z: this.position.z\n    };\n  }\n  getRadius() {\n    var _a;\n    return (_a = this.bubble.radius) !== null && _a !== void 0 ? _a : this.size.value;\n  }\n  getMass() {\n    return this.getRadius() ** 2 * Math.PI / 2;\n  }\n  getFillColor() {\n    var _a, _b;\n    const color = (_a = this.bubble.color) !== null && _a !== void 0 ? _a : (0, ColorUtils_1.getHslFromAnimation)(this.color);\n    if (color && this.roll && (this.backColor || this.roll.alter)) {\n      const backFactor = this.options.roll.mode === \"both\" ? 2 : 1,\n        backSum = this.options.roll.mode === \"horizontal\" ? Math.PI / 2 : 0,\n        rolled = Math.floor((((_b = this.roll.angle) !== null && _b !== void 0 ? _b : 0) + backSum) / (Math.PI / backFactor)) % 2;\n      if (rolled) {\n        if (this.backColor) {\n          return this.backColor;\n        }\n        if (this.roll.alter) {\n          return (0, CanvasUtils_1.alterHsl)(color, this.roll.alter.type, this.roll.alter.value);\n        }\n      }\n    }\n    return color;\n  }\n  getStrokeColor() {\n    var _a, _b;\n    return (_b = (_a = this.bubble.color) !== null && _a !== void 0 ? _a : (0, ColorUtils_1.getHslFromAnimation)(this.strokeColor)) !== null && _b !== void 0 ? _b : this.getFillColor();\n  }\n  destroy(override) {\n    this.destroyed = true;\n    this.bubble.inRange = false;\n    if (this.unbreakable) {\n      return;\n    }\n    this.destroyed = true;\n    this.bubble.inRange = false;\n    for (const [, plugin] of this.container.plugins) {\n      if (plugin.particleDestroyed) {\n        plugin.particleDestroyed(this, override);\n      }\n    }\n    if (override) {\n      return;\n    }\n    const destroyOptions = this.options.destroy;\n    if (destroyOptions.mode === \"split\") {\n      this.split();\n    }\n  }\n  reset() {\n    if (this.opacity) {\n      this.opacity.loops = 0;\n    }\n    this.size.loops = 0;\n  }\n  split() {\n    const splitOptions = this.options.destroy.split;\n    if (splitOptions.count >= 0 && this.splitCount++ > splitOptions.count) {\n      return;\n    }\n    const rate = (0, NumberUtils_1.getRangeValue)(splitOptions.rate.value);\n    for (let i = 0; i < rate; i++) {\n      this.container.particles.addSplitParticle(this);\n    }\n  }\n  calcPosition(container, position, zIndex, tryCount = 0) {\n    var _a, _b, _c, _d;\n    for (const [, plugin] of container.plugins) {\n      const pluginPos = plugin.particlePosition !== undefined ? plugin.particlePosition(position, this) : undefined;\n      if (pluginPos !== undefined) {\n        return Vector3d_1.Vector3d.create(pluginPos.x, pluginPos.y, zIndex);\n      }\n    }\n    const canvasSize = container.canvas.size,\n      exactPosition = (0, NumberUtils_1.calcExactPositionOrRandomFromSize)({\n        size: canvasSize,\n        position: position\n      }),\n      pos = Vector3d_1.Vector3d.create(exactPosition.x, exactPosition.y, zIndex),\n      radius = this.getRadius(),\n      outModes = this.options.move.outModes,\n      fixHorizontal = outMode => {\n        fixOutMode({\n          outMode,\n          checkModes: [\"bounce\", \"bounce-horizontal\"],\n          coord: pos.x,\n          maxCoord: container.canvas.size.width,\n          setCb: value => pos.x += value,\n          radius\n        });\n      },\n      fixVertical = outMode => {\n        fixOutMode({\n          outMode,\n          checkModes: [\"bounce\", \"bounce-vertical\"],\n          coord: pos.y,\n          maxCoord: container.canvas.size.height,\n          setCb: value => pos.y += value,\n          radius\n        });\n      };\n    fixHorizontal((_a = outModes.left) !== null && _a !== void 0 ? _a : outModes.default);\n    fixHorizontal((_b = outModes.right) !== null && _b !== void 0 ? _b : outModes.default);\n    fixVertical((_c = outModes.top) !== null && _c !== void 0 ? _c : outModes.default);\n    fixVertical((_d = outModes.bottom) !== null && _d !== void 0 ? _d : outModes.default);\n    if (this.checkOverlap(pos, tryCount)) {\n      return this.calcPosition(container, undefined, zIndex, tryCount + 1);\n    }\n    return pos;\n  }\n  checkOverlap(pos, tryCount = 0) {\n    const collisionsOptions = this.options.collisions,\n      radius = this.getRadius();\n    if (!collisionsOptions.enable) {\n      return false;\n    }\n    const overlapOptions = collisionsOptions.overlap;\n    if (overlapOptions.enable) {\n      return false;\n    }\n    const retries = overlapOptions.retries;\n    if (retries >= 0 && tryCount > retries) {\n      throw new Error(\"Particle is overlapping and can't be placed\");\n    }\n    let overlaps = false;\n    for (const particle of this.container.particles.array) {\n      if ((0, NumberUtils_1.getDistance)(pos, particle.position) < radius + particle.getRadius()) {\n        overlaps = true;\n        break;\n      }\n    }\n    return overlaps;\n  }\n  calculateVelocity() {\n    const baseVelocity = (0, NumberUtils_1.getParticleBaseVelocity)(this.direction),\n      res = baseVelocity.copy(),\n      moveOptions = this.options.move,\n      rad = Math.PI / 180 * (0, NumberUtils_1.getRangeValue)(moveOptions.angle.value),\n      radOffset = Math.PI / 180 * (0, NumberUtils_1.getRangeValue)(moveOptions.angle.offset),\n      range = {\n        left: radOffset - rad / 2,\n        right: radOffset + rad / 2\n      };\n    if (!moveOptions.straight) {\n      res.angle += (0, NumberUtils_1.randomInRange)((0, NumberUtils_1.setRangeValue)(range.left, range.right));\n    }\n    if (moveOptions.random && typeof moveOptions.speed === \"number\") {\n      res.length *= Math.random();\n    }\n    return res;\n  }\n  loadShapeData(shapeOptions, reduceDuplicates) {\n    const shapeData = shapeOptions.options[this.shape];\n    if (shapeData) {\n      return (0, Utils_1.deepExtend)({}, shapeData instanceof Array ? (0, Utils_1.itemFromArray)(shapeData, this.id, reduceDuplicates) : shapeData);\n    }\n  }\n  loadLife() {\n    const container = this.container,\n      particlesOptions = this.options,\n      lifeOptions = particlesOptions.life,\n      life = {\n        delay: container.retina.reduceFactor ? (0, NumberUtils_1.getRangeValue)(lifeOptions.delay.value) * (lifeOptions.delay.sync ? 1 : Math.random()) / container.retina.reduceFactor * 1000 : 0,\n        delayTime: 0,\n        duration: container.retina.reduceFactor ? (0, NumberUtils_1.getRangeValue)(lifeOptions.duration.value) * (lifeOptions.duration.sync ? 1 : Math.random()) / container.retina.reduceFactor * 1000 : 0,\n        time: 0,\n        count: particlesOptions.life.count\n      };\n    if (life.duration <= 0) {\n      life.duration = -1;\n    }\n    if (life.count <= 0) {\n      life.count = -1;\n    }\n    return life;\n  }\n}\nexports.Particle = Particle;\n_Particle_engine = new WeakMap();","map":{"version":3,"names":["__classPrivateFieldSet","receiver","state","value","kind","f","TypeError","has","call","set","__classPrivateFieldGet","get","_Particle_engine","Object","defineProperty","exports","Particle","NumberUtils_1","require","ColorUtils_1","Utils_1","ParticlesOptions_1","Shape_1","Vector_1","Vector3d_1","CanvasUtils_1","fixOutMode","data","isInArray","outMode","checkModes","coord","maxCoord","radius","setCb","constructor","engine","id","container","position","overrideOptions","group","_a","_b","_c","_d","_e","_f","_g","fill","close","lastPathTime","destroyed","unbreakable","splitCount","misplaced","retina","maxDistance","ignoresResizeRatio","pxRatio","pixelRatio","mainOptions","actualOptions","particlesOptions","ParticlesOptions","load","particles","shapeType","shape","type","reduceDuplicates","Array","itemFromArray","overrideShapeType","shapeOptions","Shape","shapeData","loadShapeData","undefined","options","pathDelay","getValue","move","path","delay","zIndexValue","getRangeValue","zIndex","initParticle","sizeOptions","size","sizeRange","enable","animation","max","getRangeMax","min","getRangeMin","loops","maxLoops","count","sizeAnimation","status","startValue","randomInRange","Math","random","velocity","sizeAnimationSpeed","reduceFactor","sync","direction","getParticleDirectionAngle","bubble","inRange","initialVelocity","calculateVelocity","copy","moveDecay","decay","gravityOptions","gravity","acceleration","inverse","calcPosition","clamp","zLayers","initialPosition","offset","Vector","origin","needsSort","lastZIndex","z","zIndexFactor","sides","drawer","drawers","plugins","getShapeDrawer","loadShape","sideCountFunc","getSidesCount","life","loadLife","spawning","shadowColor","colorToRgb","shadow","color","updater","updaters","init","particleInit","plugin","particleCreated","isVisible","isInsideCanvas","getRadius","canvasSize","canvas","x","y","height","width","draw","delta","drawParticlePlugin","drawParticle","getPosition","getMass","PI","getFillColor","getHslFromAnimation","roll","backColor","alter","backFactor","mode","backSum","rolled","floor","angle","alterHsl","getStrokeColor","strokeColor","destroy","override","particleDestroyed","destroyOptions","split","reset","opacity","splitOptions","rate","i","addSplitParticle","tryCount","pluginPos","particlePosition","Vector3d","create","exactPosition","calcExactPositionOrRandomFromSize","pos","outModes","fixHorizontal","fixVertical","left","default","right","top","bottom","checkOverlap","collisionsOptions","collisions","overlapOptions","overlap","retries","Error","overlaps","particle","array","getDistance","baseVelocity","getParticleBaseVelocity","res","moveOptions","rad","radOffset","range","straight","setRangeValue","speed","length","deepExtend","lifeOptions","delayTime","duration","time","WeakMap"],"sources":["D:/Sergio/Portfolio DeadLine(09 Oct)/portfoliofront/node_modules/tsparticles/cjs/Core/Particle.js"],"sourcesContent":["\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _Particle_engine;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Particle = void 0;\nconst NumberUtils_1 = require(\"../Utils/NumberUtils\");\nconst ColorUtils_1 = require(\"../Utils/ColorUtils\");\nconst Utils_1 = require(\"../Utils/Utils\");\nconst ParticlesOptions_1 = require(\"../Options/Classes/Particles/ParticlesOptions\");\nconst Shape_1 = require(\"../Options/Classes/Particles/Shape/Shape\");\nconst Vector_1 = require(\"./Utils/Vector\");\nconst Vector3d_1 = require(\"./Utils/Vector3d\");\nconst CanvasUtils_1 = require(\"../Utils/CanvasUtils\");\nconst fixOutMode = (data) => {\n    if (!((0, Utils_1.isInArray)(data.outMode, data.checkModes) || (0, Utils_1.isInArray)(data.outMode, data.checkModes))) {\n        return;\n    }\n    if (data.coord > data.maxCoord - data.radius * 2) {\n        data.setCb(-data.radius);\n    }\n    else if (data.coord < data.radius * 2) {\n        data.setCb(data.radius);\n    }\n};\nclass Particle {\n    constructor(engine, id, container, position, overrideOptions, group) {\n        var _a, _b, _c, _d, _e, _f, _g;\n        this.id = id;\n        this.container = container;\n        this.group = group;\n        _Particle_engine.set(this, void 0);\n        __classPrivateFieldSet(this, _Particle_engine, engine, \"f\");\n        this.fill = true;\n        this.close = true;\n        this.lastPathTime = 0;\n        this.destroyed = false;\n        this.unbreakable = false;\n        this.splitCount = 0;\n        this.misplaced = false;\n        this.retina = {\n            maxDistance: {},\n        };\n        this.ignoresResizeRatio = true;\n        const pxRatio = container.retina.pixelRatio, mainOptions = container.actualOptions, particlesOptions = new ParticlesOptions_1.ParticlesOptions();\n        particlesOptions.load(mainOptions.particles);\n        const shapeType = particlesOptions.shape.type, reduceDuplicates = particlesOptions.reduceDuplicates;\n        this.shape = shapeType instanceof Array ? (0, Utils_1.itemFromArray)(shapeType, this.id, reduceDuplicates) : shapeType;\n        if (overrideOptions === null || overrideOptions === void 0 ? void 0 : overrideOptions.shape) {\n            if (overrideOptions.shape.type) {\n                const overrideShapeType = overrideOptions.shape.type;\n                this.shape =\n                    overrideShapeType instanceof Array\n                        ? (0, Utils_1.itemFromArray)(overrideShapeType, this.id, reduceDuplicates)\n                        : overrideShapeType;\n            }\n            const shapeOptions = new Shape_1.Shape();\n            shapeOptions.load(overrideOptions.shape);\n            if (this.shape) {\n                this.shapeData = this.loadShapeData(shapeOptions, reduceDuplicates);\n            }\n        }\n        else {\n            this.shapeData = this.loadShapeData(particlesOptions.shape, reduceDuplicates);\n        }\n        if (overrideOptions !== undefined) {\n            particlesOptions.load(overrideOptions);\n        }\n        if (((_a = this.shapeData) === null || _a === void 0 ? void 0 : _a.particles) !== undefined) {\n            particlesOptions.load((_b = this.shapeData) === null || _b === void 0 ? void 0 : _b.particles);\n        }\n        this.fill = (_d = (_c = this.shapeData) === null || _c === void 0 ? void 0 : _c.fill) !== null && _d !== void 0 ? _d : this.fill;\n        this.close = (_f = (_e = this.shapeData) === null || _e === void 0 ? void 0 : _e.close) !== null && _f !== void 0 ? _f : this.close;\n        this.options = particlesOptions;\n        this.pathDelay = (0, NumberUtils_1.getValue)(this.options.move.path.delay) * 1000;\n        const zIndexValue = (0, NumberUtils_1.getRangeValue)(this.options.zIndex.value);\n        container.retina.initParticle(this);\n        const sizeOptions = this.options.size, sizeRange = sizeOptions.value;\n        this.size = {\n            enable: sizeOptions.animation.enable,\n            value: (0, NumberUtils_1.getValue)(sizeOptions) * container.retina.pixelRatio,\n            max: (0, NumberUtils_1.getRangeMax)(sizeRange) * pxRatio,\n            min: (0, NumberUtils_1.getRangeMin)(sizeRange) * pxRatio,\n            loops: 0,\n            maxLoops: (0, NumberUtils_1.getRangeValue)(sizeOptions.animation.count),\n        };\n        const sizeAnimation = sizeOptions.animation;\n        if (sizeAnimation.enable) {\n            this.size.status = 0;\n            switch (sizeAnimation.startValue) {\n                case \"min\":\n                    this.size.value = this.size.min;\n                    this.size.status = 0;\n                    break;\n                case \"random\":\n                    this.size.value = (0, NumberUtils_1.randomInRange)(this.size) * pxRatio;\n                    this.size.status = Math.random() >= 0.5 ? 0 : 1;\n                    break;\n                case \"max\":\n                default:\n                    this.size.value = this.size.max;\n                    this.size.status = 1;\n                    break;\n            }\n            this.size.velocity =\n                (((_g = this.retina.sizeAnimationSpeed) !== null && _g !== void 0 ? _g : container.retina.sizeAnimationSpeed) / 100) *\n                    container.retina.reduceFactor;\n            if (!sizeAnimation.sync) {\n                this.size.velocity *= Math.random();\n            }\n        }\n        this.direction = (0, NumberUtils_1.getParticleDirectionAngle)(this.options.move.direction);\n        this.bubble = {\n            inRange: false,\n        };\n        this.initialVelocity = this.calculateVelocity();\n        this.velocity = this.initialVelocity.copy();\n        this.moveDecay = 1 - (0, NumberUtils_1.getRangeValue)(this.options.move.decay);\n        const gravityOptions = this.options.move.gravity;\n        this.gravity = {\n            enable: gravityOptions.enable,\n            acceleration: (0, NumberUtils_1.getRangeValue)(gravityOptions.acceleration),\n            inverse: gravityOptions.inverse,\n        };\n        this.position = this.calcPosition(container, position, (0, NumberUtils_1.clamp)(zIndexValue, 0, container.zLayers));\n        this.initialPosition = this.position.copy();\n        this.offset = Vector_1.Vector.origin;\n        const particles = container.particles;\n        particles.needsSort = particles.needsSort || particles.lastZIndex < this.position.z;\n        particles.lastZIndex = this.position.z;\n        this.zIndexFactor = this.position.z / container.zLayers;\n        this.sides = 24;\n        let drawer = container.drawers.get(this.shape);\n        if (!drawer) {\n            drawer = __classPrivateFieldGet(this, _Particle_engine, \"f\").plugins.getShapeDrawer(this.shape);\n            if (drawer) {\n                container.drawers.set(this.shape, drawer);\n            }\n        }\n        if (drawer === null || drawer === void 0 ? void 0 : drawer.loadShape) {\n            drawer === null || drawer === void 0 ? void 0 : drawer.loadShape(this);\n        }\n        const sideCountFunc = drawer === null || drawer === void 0 ? void 0 : drawer.getSidesCount;\n        if (sideCountFunc) {\n            this.sides = sideCountFunc(this);\n        }\n        this.life = this.loadLife();\n        this.spawning = this.life.delay > 0;\n        this.shadowColor = (0, ColorUtils_1.colorToRgb)(this.options.shadow.color);\n        for (const updater of container.particles.updaters) {\n            if (updater.init) {\n                updater.init(this);\n            }\n        }\n        if (drawer && drawer.particleInit) {\n            drawer.particleInit(container, this);\n        }\n        for (const [, plugin] of container.plugins) {\n            if (plugin.particleCreated) {\n                plugin.particleCreated(this);\n            }\n        }\n    }\n    isVisible() {\n        return !this.destroyed && !this.spawning && this.isInsideCanvas();\n    }\n    isInsideCanvas() {\n        const radius = this.getRadius(), canvasSize = this.container.canvas.size;\n        return (this.position.x >= -radius &&\n            this.position.y >= -radius &&\n            this.position.y <= canvasSize.height + radius &&\n            this.position.x <= canvasSize.width + radius);\n    }\n    draw(delta) {\n        const container = this.container;\n        for (const [, plugin] of container.plugins) {\n            container.canvas.drawParticlePlugin(plugin, this, delta);\n        }\n        container.canvas.drawParticle(this, delta);\n    }\n    getPosition() {\n        return {\n            x: this.position.x + this.offset.x,\n            y: this.position.y + this.offset.y,\n            z: this.position.z,\n        };\n    }\n    getRadius() {\n        var _a;\n        return (_a = this.bubble.radius) !== null && _a !== void 0 ? _a : this.size.value;\n    }\n    getMass() {\n        return (this.getRadius() ** 2 * Math.PI) / 2;\n    }\n    getFillColor() {\n        var _a, _b;\n        const color = (_a = this.bubble.color) !== null && _a !== void 0 ? _a : (0, ColorUtils_1.getHslFromAnimation)(this.color);\n        if (color && this.roll && (this.backColor || this.roll.alter)) {\n            const backFactor = this.options.roll.mode === \"both\" ? 2 : 1, backSum = this.options.roll.mode === \"horizontal\" ? Math.PI / 2 : 0, rolled = Math.floor((((_b = this.roll.angle) !== null && _b !== void 0 ? _b : 0) + backSum) / (Math.PI / backFactor)) % 2;\n            if (rolled) {\n                if (this.backColor) {\n                    return this.backColor;\n                }\n                if (this.roll.alter) {\n                    return (0, CanvasUtils_1.alterHsl)(color, this.roll.alter.type, this.roll.alter.value);\n                }\n            }\n        }\n        return color;\n    }\n    getStrokeColor() {\n        var _a, _b;\n        return (_b = (_a = this.bubble.color) !== null && _a !== void 0 ? _a : (0, ColorUtils_1.getHslFromAnimation)(this.strokeColor)) !== null && _b !== void 0 ? _b : this.getFillColor();\n    }\n    destroy(override) {\n        this.destroyed = true;\n        this.bubble.inRange = false;\n        if (this.unbreakable) {\n            return;\n        }\n        this.destroyed = true;\n        this.bubble.inRange = false;\n        for (const [, plugin] of this.container.plugins) {\n            if (plugin.particleDestroyed) {\n                plugin.particleDestroyed(this, override);\n            }\n        }\n        if (override) {\n            return;\n        }\n        const destroyOptions = this.options.destroy;\n        if (destroyOptions.mode === \"split\") {\n            this.split();\n        }\n    }\n    reset() {\n        if (this.opacity) {\n            this.opacity.loops = 0;\n        }\n        this.size.loops = 0;\n    }\n    split() {\n        const splitOptions = this.options.destroy.split;\n        if (splitOptions.count >= 0 && this.splitCount++ > splitOptions.count) {\n            return;\n        }\n        const rate = (0, NumberUtils_1.getRangeValue)(splitOptions.rate.value);\n        for (let i = 0; i < rate; i++) {\n            this.container.particles.addSplitParticle(this);\n        }\n    }\n    calcPosition(container, position, zIndex, tryCount = 0) {\n        var _a, _b, _c, _d;\n        for (const [, plugin] of container.plugins) {\n            const pluginPos = plugin.particlePosition !== undefined ? plugin.particlePosition(position, this) : undefined;\n            if (pluginPos !== undefined) {\n                return Vector3d_1.Vector3d.create(pluginPos.x, pluginPos.y, zIndex);\n            }\n        }\n        const canvasSize = container.canvas.size, exactPosition = (0, NumberUtils_1.calcExactPositionOrRandomFromSize)({\n            size: canvasSize,\n            position: position,\n        }), pos = Vector3d_1.Vector3d.create(exactPosition.x, exactPosition.y, zIndex), radius = this.getRadius(), outModes = this.options.move.outModes, fixHorizontal = (outMode) => {\n            fixOutMode({\n                outMode,\n                checkModes: [\"bounce\", \"bounce-horizontal\"],\n                coord: pos.x,\n                maxCoord: container.canvas.size.width,\n                setCb: (value) => (pos.x += value),\n                radius,\n            });\n        }, fixVertical = (outMode) => {\n            fixOutMode({\n                outMode,\n                checkModes: [\"bounce\", \"bounce-vertical\"],\n                coord: pos.y,\n                maxCoord: container.canvas.size.height,\n                setCb: (value) => (pos.y += value),\n                radius,\n            });\n        };\n        fixHorizontal((_a = outModes.left) !== null && _a !== void 0 ? _a : outModes.default);\n        fixHorizontal((_b = outModes.right) !== null && _b !== void 0 ? _b : outModes.default);\n        fixVertical((_c = outModes.top) !== null && _c !== void 0 ? _c : outModes.default);\n        fixVertical((_d = outModes.bottom) !== null && _d !== void 0 ? _d : outModes.default);\n        if (this.checkOverlap(pos, tryCount)) {\n            return this.calcPosition(container, undefined, zIndex, tryCount + 1);\n        }\n        return pos;\n    }\n    checkOverlap(pos, tryCount = 0) {\n        const collisionsOptions = this.options.collisions, radius = this.getRadius();\n        if (!collisionsOptions.enable) {\n            return false;\n        }\n        const overlapOptions = collisionsOptions.overlap;\n        if (overlapOptions.enable) {\n            return false;\n        }\n        const retries = overlapOptions.retries;\n        if (retries >= 0 && tryCount > retries) {\n            throw new Error(\"Particle is overlapping and can't be placed\");\n        }\n        let overlaps = false;\n        for (const particle of this.container.particles.array) {\n            if ((0, NumberUtils_1.getDistance)(pos, particle.position) < radius + particle.getRadius()) {\n                overlaps = true;\n                break;\n            }\n        }\n        return overlaps;\n    }\n    calculateVelocity() {\n        const baseVelocity = (0, NumberUtils_1.getParticleBaseVelocity)(this.direction), res = baseVelocity.copy(), moveOptions = this.options.move, rad = (Math.PI / 180) * (0, NumberUtils_1.getRangeValue)(moveOptions.angle.value), radOffset = (Math.PI / 180) * (0, NumberUtils_1.getRangeValue)(moveOptions.angle.offset), range = {\n            left: radOffset - rad / 2,\n            right: radOffset + rad / 2,\n        };\n        if (!moveOptions.straight) {\n            res.angle += (0, NumberUtils_1.randomInRange)((0, NumberUtils_1.setRangeValue)(range.left, range.right));\n        }\n        if (moveOptions.random && typeof moveOptions.speed === \"number\") {\n            res.length *= Math.random();\n        }\n        return res;\n    }\n    loadShapeData(shapeOptions, reduceDuplicates) {\n        const shapeData = shapeOptions.options[this.shape];\n        if (shapeData) {\n            return (0, Utils_1.deepExtend)({}, shapeData instanceof Array ? (0, Utils_1.itemFromArray)(shapeData, this.id, reduceDuplicates) : shapeData);\n        }\n    }\n    loadLife() {\n        const container = this.container, particlesOptions = this.options, lifeOptions = particlesOptions.life, life = {\n            delay: container.retina.reduceFactor\n                ? (((0, NumberUtils_1.getRangeValue)(lifeOptions.delay.value) * (lifeOptions.delay.sync ? 1 : Math.random())) /\n                    container.retina.reduceFactor) *\n                    1000\n                : 0,\n            delayTime: 0,\n            duration: container.retina.reduceFactor\n                ? (((0, NumberUtils_1.getRangeValue)(lifeOptions.duration.value) * (lifeOptions.duration.sync ? 1 : Math.random())) /\n                    container.retina.reduceFactor) *\n                    1000\n                : 0,\n            time: 0,\n            count: particlesOptions.life.count,\n        };\n        if (life.duration <= 0) {\n            life.duration = -1;\n        }\n        if (life.count <= 0) {\n            life.count = -1;\n        }\n        return life;\n    }\n}\nexports.Particle = Particle;\n_Particle_engine = new WeakMap();\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}